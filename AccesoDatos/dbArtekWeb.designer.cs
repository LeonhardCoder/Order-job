#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccesoDatos
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="newprueba")]
	public partial class dbArtekWebDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertActividad(Actividad instance);
    partial void UpdateActividad(Actividad instance);
    partial void DeleteActividad(Actividad instance);
    partial void InsertBodegaMateriales(BodegaMateriales instance);
    partial void UpdateBodegaMateriales(BodegaMateriales instance);
    partial void DeleteBodegaMateriales(BodegaMateriales instance);
    partial void InsertCiudad(Ciudad instance);
    partial void UpdateCiudad(Ciudad instance);
    partial void DeleteCiudad(Ciudad instance);
    partial void InsertClienteFinal(ClienteFinal instance);
    partial void UpdateClienteFinal(ClienteFinal instance);
    partial void DeleteClienteFinal(ClienteFinal instance);
    partial void InsertClientes_Ciudad(Clientes_Ciudad instance);
    partial void UpdateClientes_Ciudad(Clientes_Ciudad instance);
    partial void DeleteClientes_Ciudad(Clientes_Ciudad instance);
    partial void InsertClientes_Operadora(Clientes_Operadora instance);
    partial void UpdateClientes_Operadora(Clientes_Operadora instance);
    partial void DeleteClientes_Operadora(Clientes_Operadora instance);
    partial void InsertDetalleMateriales(DetalleMateriales instance);
    partial void UpdateDetalleMateriales(DetalleMateriales instance);
    partial void DeleteDetalleMateriales(DetalleMateriales instance);
    partial void InsertDetalleOT(DetalleOT instance);
    partial void UpdateDetalleOT(DetalleOT instance);
    partial void DeleteDetalleOT(DetalleOT instance);
    partial void InsertDetalleOT_Usuarios(DetalleOT_Usuarios instance);
    partial void UpdateDetalleOT_Usuarios(DetalleOT_Usuarios instance);
    partial void DeleteDetalleOT_Usuarios(DetalleOT_Usuarios instance);
    partial void InsertMateriales(Materiales instance);
    partial void UpdateMateriales(Materiales instance);
    partial void DeleteMateriales(Materiales instance);
    partial void InsertMenus(Menus instance);
    partial void UpdateMenus(Menus instance);
    partial void DeleteMenus(Menus instance);
    partial void InsertOperadora(Operadora instance);
    partial void UpdateOperadora(Operadora instance);
    partial void DeleteOperadora(Operadora instance);
    partial void InsertOrdenTrabajo(OrdenTrabajo instance);
    partial void UpdateOrdenTrabajo(OrdenTrabajo instance);
    partial void DeleteOrdenTrabajo(OrdenTrabajo instance);
    partial void InsertPais(Pais instance);
    partial void UpdatePais(Pais instance);
    partial void DeletePais(Pais instance);
    partial void InsertPerfil(Perfil instance);
    partial void UpdatePerfil(Perfil instance);
    partial void DeletePerfil(Perfil instance);
    partial void InsertProvincia(Provincia instance);
    partial void UpdateProvincia(Provincia instance);
    partial void DeleteProvincia(Provincia instance);
    partial void InsertTecnologia(Tecnologia instance);
    partial void UpdateTecnologia(Tecnologia instance);
    partial void DeleteTecnologia(Tecnologia instance);
    partial void InsertTipo_Categoria(Tipo_Categoria instance);
    partial void UpdateTipo_Categoria(Tipo_Categoria instance);
    partial void DeleteTipo_Categoria(Tipo_Categoria instance);
    partial void InsertTipoMaterial(TipoMaterial instance);
    partial void UpdateTipoMaterial(TipoMaterial instance);
    partial void DeleteTipoMaterial(TipoMaterial instance);
    partial void InsertTipoTrabajo(TipoTrabajo instance);
    partial void UpdateTipoTrabajo(TipoTrabajo instance);
    partial void DeleteTipoTrabajo(TipoTrabajo instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertContacto(Contacto instance);
    partial void UpdateContacto(Contacto instance);
    partial void DeleteContacto(Contacto instance);
    partial void InsertClienteExterno(ClienteExterno instance);
    partial void UpdateClienteExterno(ClienteExterno instance);
    partial void DeleteClienteExterno(ClienteExterno instance);
    #endregion
		
		public dbArtekWebDataContext() : 
				base(global::AccesoDatos.Properties.Settings.Default.newpruebaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbArtekWebDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbArtekWebDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbArtekWebDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbArtekWebDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Actividad> Actividad
		{
			get
			{
				return this.GetTable<Actividad>();
			}
		}
		
		public System.Data.Linq.Table<BodegaMateriales> BodegaMateriales
		{
			get
			{
				return this.GetTable<BodegaMateriales>();
			}
		}
		
		public System.Data.Linq.Table<Ciudad> Ciudad
		{
			get
			{
				return this.GetTable<Ciudad>();
			}
		}
		
		public System.Data.Linq.Table<ClienteFinal> ClienteFinal
		{
			get
			{
				return this.GetTable<ClienteFinal>();
			}
		}
		
		public System.Data.Linq.Table<Clientes_Ciudad> Clientes_Ciudad
		{
			get
			{
				return this.GetTable<Clientes_Ciudad>();
			}
		}
		
		public System.Data.Linq.Table<Clientes_Operadora> Clientes_Operadora
		{
			get
			{
				return this.GetTable<Clientes_Operadora>();
			}
		}
		
		public System.Data.Linq.Table<DetalleMateriales> DetalleMateriales
		{
			get
			{
				return this.GetTable<DetalleMateriales>();
			}
		}
		
		public System.Data.Linq.Table<DetalleOT> DetalleOT
		{
			get
			{
				return this.GetTable<DetalleOT>();
			}
		}
		
		public System.Data.Linq.Table<DetalleOT_Usuarios> DetalleOT_Usuarios
		{
			get
			{
				return this.GetTable<DetalleOT_Usuarios>();
			}
		}
		
		public System.Data.Linq.Table<Materiales> Materiales
		{
			get
			{
				return this.GetTable<Materiales>();
			}
		}
		
		public System.Data.Linq.Table<Menus> Menus
		{
			get
			{
				return this.GetTable<Menus>();
			}
		}
		
		public System.Data.Linq.Table<Operadora> Operadora
		{
			get
			{
				return this.GetTable<Operadora>();
			}
		}
		
		public System.Data.Linq.Table<OrdenTrabajo> OrdenTrabajo
		{
			get
			{
				return this.GetTable<OrdenTrabajo>();
			}
		}
		
		public System.Data.Linq.Table<Pais> Pais
		{
			get
			{
				return this.GetTable<Pais>();
			}
		}
		
		public System.Data.Linq.Table<Perfil> Perfil
		{
			get
			{
				return this.GetTable<Perfil>();
			}
		}
		
		public System.Data.Linq.Table<Provincia> Provincia
		{
			get
			{
				return this.GetTable<Provincia>();
			}
		}
		
		public System.Data.Linq.Table<Tecnologia> Tecnologia
		{
			get
			{
				return this.GetTable<Tecnologia>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Categoria> Tipo_Categoria
		{
			get
			{
				return this.GetTable<Tipo_Categoria>();
			}
		}
		
		public System.Data.Linq.Table<TipoMaterial> TipoMaterial
		{
			get
			{
				return this.GetTable<TipoMaterial>();
			}
		}
		
		public System.Data.Linq.Table<TipoTrabajo> TipoTrabajo
		{
			get
			{
				return this.GetTable<TipoTrabajo>();
			}
		}
		
		public System.Data.Linq.Table<UserActivation> UserActivation
		{
			get
			{
				return this.GetTable<UserActivation>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Contacto> Contacto
		{
			get
			{
				return this.GetTable<Contacto>();
			}
		}
		
		public System.Data.Linq.Table<ClienteExterno> ClienteExterno
		{
			get
			{
				return this.GetTable<ClienteExterno>();
			}
		}
		
		public System.Data.Linq.Table<View_sucursales> View_sucursales
		{
			get
			{
				return this.GetTable<View_sucursales>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_sucursal_por_cliente")]
		public ISingleResult<sp_sucursal_por_clienteResult> sp_sucursal_por_cliente([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_ClienteFinal)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_ClienteFinal);
			return ((ISingleResult<sp_sucursal_por_clienteResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Actividad")]
	public partial class Actividad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Actividad;
		
		private string _Act_Descripcion;
		
		private System.Nullable<char> _Act_Estado;
		
		private EntitySet<DetalleOT> _DetalleOT;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ActividadChanging(int value);
    partial void OnId_ActividadChanged();
    partial void OnAct_DescripcionChanging(string value);
    partial void OnAct_DescripcionChanged();
    partial void OnAct_EstadoChanging(System.Nullable<char> value);
    partial void OnAct_EstadoChanged();
    #endregion
		
		public Actividad()
		{
			this._DetalleOT = new EntitySet<DetalleOT>(new Action<DetalleOT>(this.attach_DetalleOT), new Action<DetalleOT>(this.detach_DetalleOT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Actividad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Actividad
		{
			get
			{
				return this._Id_Actividad;
			}
			set
			{
				if ((this._Id_Actividad != value))
				{
					this.OnId_ActividadChanging(value);
					this.SendPropertyChanging();
					this._Id_Actividad = value;
					this.SendPropertyChanged("Id_Actividad");
					this.OnId_ActividadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Act_Descripcion", DbType="VarChar(150)")]
		public string Act_Descripcion
		{
			get
			{
				return this._Act_Descripcion;
			}
			set
			{
				if ((this._Act_Descripcion != value))
				{
					this.OnAct_DescripcionChanging(value);
					this.SendPropertyChanging();
					this._Act_Descripcion = value;
					this.SendPropertyChanged("Act_Descripcion");
					this.OnAct_DescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Act_Estado", DbType="Char(1)")]
		public System.Nullable<char> Act_Estado
		{
			get
			{
				return this._Act_Estado;
			}
			set
			{
				if ((this._Act_Estado != value))
				{
					this.OnAct_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Act_Estado = value;
					this.SendPropertyChanged("Act_Estado");
					this.OnAct_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actividad_DetalleOT", Storage="_DetalleOT", ThisKey="Id_Actividad", OtherKey="Id_Actividad")]
		public EntitySet<DetalleOT> DetalleOT
		{
			get
			{
				return this._DetalleOT;
			}
			set
			{
				this._DetalleOT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleOT(DetalleOT entity)
		{
			this.SendPropertyChanging();
			entity.Actividad = this;
		}
		
		private void detach_DetalleOT(DetalleOT entity)
		{
			this.SendPropertyChanging();
			entity.Actividad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BodegaMateriales")]
	public partial class BodegaMateriales : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_BodegaMaterial;
		
		private int _Id_Materiales;
		
		private int _Id_Tecnologia;
		
		private System.Nullable<int> _BMat_CantidadIngreso;
		
		private System.Nullable<int> _BMat_CantidadSalida;
		
		private System.Nullable<int> _BMat_CantidadExistente;
		
		private string _BMat_FechaIngreso;
		
		private string _BMat_ActaEntrega;
		
		private string _BMat_Observaciones;
		
		private System.Nullable<char> _BMat_Estado;
		
		private EntitySet<DetalleMateriales> _DetalleMateriales;
		
		private EntityRef<Materiales> _Materiales;
		
		private EntityRef<Tecnologia> _Tecnologia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_BodegaMaterialChanging(int value);
    partial void OnId_BodegaMaterialChanged();
    partial void OnId_MaterialesChanging(int value);
    partial void OnId_MaterialesChanged();
    partial void OnId_TecnologiaChanging(int value);
    partial void OnId_TecnologiaChanged();
    partial void OnBMat_CantidadIngresoChanging(System.Nullable<int> value);
    partial void OnBMat_CantidadIngresoChanged();
    partial void OnBMat_CantidadSalidaChanging(System.Nullable<int> value);
    partial void OnBMat_CantidadSalidaChanged();
    partial void OnBMat_CantidadExistenteChanging(System.Nullable<int> value);
    partial void OnBMat_CantidadExistenteChanged();
    partial void OnBMat_FechaIngresoChanging(string value);
    partial void OnBMat_FechaIngresoChanged();
    partial void OnBMat_ActaEntregaChanging(string value);
    partial void OnBMat_ActaEntregaChanged();
    partial void OnBMat_ObservacionesChanging(string value);
    partial void OnBMat_ObservacionesChanged();
    partial void OnBMat_EstadoChanging(System.Nullable<char> value);
    partial void OnBMat_EstadoChanged();
    #endregion
		
		public BodegaMateriales()
		{
			this._DetalleMateriales = new EntitySet<DetalleMateriales>(new Action<DetalleMateriales>(this.attach_DetalleMateriales), new Action<DetalleMateriales>(this.detach_DetalleMateriales));
			this._Materiales = default(EntityRef<Materiales>);
			this._Tecnologia = default(EntityRef<Tecnologia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_BodegaMaterial", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_BodegaMaterial
		{
			get
			{
				return this._Id_BodegaMaterial;
			}
			set
			{
				if ((this._Id_BodegaMaterial != value))
				{
					this.OnId_BodegaMaterialChanging(value);
					this.SendPropertyChanging();
					this._Id_BodegaMaterial = value;
					this.SendPropertyChanged("Id_BodegaMaterial");
					this.OnId_BodegaMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Materiales", DbType="Int NOT NULL")]
		public int Id_Materiales
		{
			get
			{
				return this._Id_Materiales;
			}
			set
			{
				if ((this._Id_Materiales != value))
				{
					if (this._Materiales.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_MaterialesChanging(value);
					this.SendPropertyChanging();
					this._Id_Materiales = value;
					this.SendPropertyChanged("Id_Materiales");
					this.OnId_MaterialesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Tecnologia", DbType="Int NOT NULL")]
		public int Id_Tecnologia
		{
			get
			{
				return this._Id_Tecnologia;
			}
			set
			{
				if ((this._Id_Tecnologia != value))
				{
					if (this._Tecnologia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_TecnologiaChanging(value);
					this.SendPropertyChanging();
					this._Id_Tecnologia = value;
					this.SendPropertyChanged("Id_Tecnologia");
					this.OnId_TecnologiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMat_CantidadIngreso", DbType="Int")]
		public System.Nullable<int> BMat_CantidadIngreso
		{
			get
			{
				return this._BMat_CantidadIngreso;
			}
			set
			{
				if ((this._BMat_CantidadIngreso != value))
				{
					this.OnBMat_CantidadIngresoChanging(value);
					this.SendPropertyChanging();
					this._BMat_CantidadIngreso = value;
					this.SendPropertyChanged("BMat_CantidadIngreso");
					this.OnBMat_CantidadIngresoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMat_CantidadSalida", DbType="Int")]
		public System.Nullable<int> BMat_CantidadSalida
		{
			get
			{
				return this._BMat_CantidadSalida;
			}
			set
			{
				if ((this._BMat_CantidadSalida != value))
				{
					this.OnBMat_CantidadSalidaChanging(value);
					this.SendPropertyChanging();
					this._BMat_CantidadSalida = value;
					this.SendPropertyChanged("BMat_CantidadSalida");
					this.OnBMat_CantidadSalidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMat_CantidadExistente", DbType="Int")]
		public System.Nullable<int> BMat_CantidadExistente
		{
			get
			{
				return this._BMat_CantidadExistente;
			}
			set
			{
				if ((this._BMat_CantidadExistente != value))
				{
					this.OnBMat_CantidadExistenteChanging(value);
					this.SendPropertyChanging();
					this._BMat_CantidadExistente = value;
					this.SendPropertyChanged("BMat_CantidadExistente");
					this.OnBMat_CantidadExistenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMat_FechaIngreso", DbType="Char(10)")]
		public string BMat_FechaIngreso
		{
			get
			{
				return this._BMat_FechaIngreso;
			}
			set
			{
				if ((this._BMat_FechaIngreso != value))
				{
					this.OnBMat_FechaIngresoChanging(value);
					this.SendPropertyChanging();
					this._BMat_FechaIngreso = value;
					this.SendPropertyChanged("BMat_FechaIngreso");
					this.OnBMat_FechaIngresoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMat_ActaEntrega", DbType="Char(10)")]
		public string BMat_ActaEntrega
		{
			get
			{
				return this._BMat_ActaEntrega;
			}
			set
			{
				if ((this._BMat_ActaEntrega != value))
				{
					this.OnBMat_ActaEntregaChanging(value);
					this.SendPropertyChanging();
					this._BMat_ActaEntrega = value;
					this.SendPropertyChanged("BMat_ActaEntrega");
					this.OnBMat_ActaEntregaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMat_Observaciones", DbType="Char(10)")]
		public string BMat_Observaciones
		{
			get
			{
				return this._BMat_Observaciones;
			}
			set
			{
				if ((this._BMat_Observaciones != value))
				{
					this.OnBMat_ObservacionesChanging(value);
					this.SendPropertyChanging();
					this._BMat_Observaciones = value;
					this.SendPropertyChanged("BMat_Observaciones");
					this.OnBMat_ObservacionesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMat_Estado", DbType="Char(1)")]
		public System.Nullable<char> BMat_Estado
		{
			get
			{
				return this._BMat_Estado;
			}
			set
			{
				if ((this._BMat_Estado != value))
				{
					this.OnBMat_EstadoChanging(value);
					this.SendPropertyChanging();
					this._BMat_Estado = value;
					this.SendPropertyChanged("BMat_Estado");
					this.OnBMat_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BodegaMateriales_DetalleMateriales", Storage="_DetalleMateriales", ThisKey="Id_BodegaMaterial", OtherKey="Id_BodegaMaterial")]
		public EntitySet<DetalleMateriales> DetalleMateriales
		{
			get
			{
				return this._DetalleMateriales;
			}
			set
			{
				this._DetalleMateriales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materiales_BodegaMateriales", Storage="_Materiales", ThisKey="Id_Materiales", OtherKey="Id_Materiales", IsForeignKey=true)]
		public Materiales Materiales
		{
			get
			{
				return this._Materiales.Entity;
			}
			set
			{
				Materiales previousValue = this._Materiales.Entity;
				if (((previousValue != value) 
							|| (this._Materiales.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Materiales.Entity = null;
						previousValue.BodegaMateriales.Remove(this);
					}
					this._Materiales.Entity = value;
					if ((value != null))
					{
						value.BodegaMateriales.Add(this);
						this._Id_Materiales = value.Id_Materiales;
					}
					else
					{
						this._Id_Materiales = default(int);
					}
					this.SendPropertyChanged("Materiales");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tecnologia_BodegaMateriales", Storage="_Tecnologia", ThisKey="Id_Tecnologia", OtherKey="Id_Tecnologia", IsForeignKey=true)]
		public Tecnologia Tecnologia
		{
			get
			{
				return this._Tecnologia.Entity;
			}
			set
			{
				Tecnologia previousValue = this._Tecnologia.Entity;
				if (((previousValue != value) 
							|| (this._Tecnologia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tecnologia.Entity = null;
						previousValue.BodegaMateriales.Remove(this);
					}
					this._Tecnologia.Entity = value;
					if ((value != null))
					{
						value.BodegaMateriales.Add(this);
						this._Id_Tecnologia = value.Id_Tecnologia;
					}
					else
					{
						this._Id_Tecnologia = default(int);
					}
					this.SendPropertyChanged("Tecnologia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleMateriales(DetalleMateriales entity)
		{
			this.SendPropertyChanging();
			entity.BodegaMateriales = this;
		}
		
		private void detach_DetalleMateriales(DetalleMateriales entity)
		{
			this.SendPropertyChanging();
			entity.BodegaMateriales = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ciudad")]
	public partial class Ciudad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Ciudad;
		
		private string _Ciu_Nombre;
		
		private System.Nullable<char> _Ciu_Estado;
		
		private int _Id_Provincia;
		
		private EntitySet<Clientes_Ciudad> _Clientes_Ciudad;
		
		private EntityRef<Provincia> _Provincia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_CiudadChanging(int value);
    partial void OnId_CiudadChanged();
    partial void OnCiu_NombreChanging(string value);
    partial void OnCiu_NombreChanged();
    partial void OnCiu_EstadoChanging(System.Nullable<char> value);
    partial void OnCiu_EstadoChanged();
    partial void OnId_ProvinciaChanging(int value);
    partial void OnId_ProvinciaChanged();
    #endregion
		
		public Ciudad()
		{
			this._Clientes_Ciudad = new EntitySet<Clientes_Ciudad>(new Action<Clientes_Ciudad>(this.attach_Clientes_Ciudad), new Action<Clientes_Ciudad>(this.detach_Clientes_Ciudad));
			this._Provincia = default(EntityRef<Provincia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Ciudad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Ciudad
		{
			get
			{
				return this._Id_Ciudad;
			}
			set
			{
				if ((this._Id_Ciudad != value))
				{
					this.OnId_CiudadChanging(value);
					this.SendPropertyChanging();
					this._Id_Ciudad = value;
					this.SendPropertyChanged("Id_Ciudad");
					this.OnId_CiudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ciu_Nombre", DbType="VarChar(100)")]
		public string Ciu_Nombre
		{
			get
			{
				return this._Ciu_Nombre;
			}
			set
			{
				if ((this._Ciu_Nombre != value))
				{
					this.OnCiu_NombreChanging(value);
					this.SendPropertyChanging();
					this._Ciu_Nombre = value;
					this.SendPropertyChanged("Ciu_Nombre");
					this.OnCiu_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ciu_Estado", DbType="Char(1)")]
		public System.Nullable<char> Ciu_Estado
		{
			get
			{
				return this._Ciu_Estado;
			}
			set
			{
				if ((this._Ciu_Estado != value))
				{
					this.OnCiu_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Ciu_Estado = value;
					this.SendPropertyChanged("Ciu_Estado");
					this.OnCiu_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Provincia", DbType="Int NOT NULL")]
		public int Id_Provincia
		{
			get
			{
				return this._Id_Provincia;
			}
			set
			{
				if ((this._Id_Provincia != value))
				{
					if (this._Provincia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Id_Provincia = value;
					this.SendPropertyChanged("Id_Provincia");
					this.OnId_ProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudad_Clientes_Ciudad", Storage="_Clientes_Ciudad", ThisKey="Id_Ciudad", OtherKey="Id_Ciudad")]
		public EntitySet<Clientes_Ciudad> Clientes_Ciudad
		{
			get
			{
				return this._Clientes_Ciudad;
			}
			set
			{
				this._Clientes_Ciudad.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincia_Ciudad", Storage="_Provincia", ThisKey="Id_Provincia", OtherKey="Id_Provincia", IsForeignKey=true)]
		public Provincia Provincia
		{
			get
			{
				return this._Provincia.Entity;
			}
			set
			{
				Provincia previousValue = this._Provincia.Entity;
				if (((previousValue != value) 
							|| (this._Provincia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provincia.Entity = null;
						previousValue.Ciudad.Remove(this);
					}
					this._Provincia.Entity = value;
					if ((value != null))
					{
						value.Ciudad.Add(this);
						this._Id_Provincia = value.Id_Provincia;
					}
					else
					{
						this._Id_Provincia = default(int);
					}
					this.SendPropertyChanged("Provincia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes_Ciudad(Clientes_Ciudad entity)
		{
			this.SendPropertyChanging();
			entity.Ciudad = this;
		}
		
		private void detach_Clientes_Ciudad(Clientes_Ciudad entity)
		{
			this.SendPropertyChanging();
			entity.Ciudad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClienteFinal")]
	public partial class ClienteFinal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_ClienteFinal;
		
		private string _Cli_Nombre;
		
		private string _Cli_Direccion;
		
		private System.Nullable<char> _Cli_Estado;
		
		private EntitySet<Clientes_Ciudad> _Clientes_Ciudad;
		
		private EntitySet<Clientes_Operadora> _Clientes_Operadora;
		
		private EntitySet<OrdenTrabajo> _OrdenTrabajo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ClienteFinalChanging(int value);
    partial void OnId_ClienteFinalChanged();
    partial void OnCli_NombreChanging(string value);
    partial void OnCli_NombreChanged();
    partial void OnCli_DireccionChanging(string value);
    partial void OnCli_DireccionChanged();
    partial void OnCli_EstadoChanging(System.Nullable<char> value);
    partial void OnCli_EstadoChanged();
    #endregion
		
		public ClienteFinal()
		{
			this._Clientes_Ciudad = new EntitySet<Clientes_Ciudad>(new Action<Clientes_Ciudad>(this.attach_Clientes_Ciudad), new Action<Clientes_Ciudad>(this.detach_Clientes_Ciudad));
			this._Clientes_Operadora = new EntitySet<Clientes_Operadora>(new Action<Clientes_Operadora>(this.attach_Clientes_Operadora), new Action<Clientes_Operadora>(this.detach_Clientes_Operadora));
			this._OrdenTrabajo = new EntitySet<OrdenTrabajo>(new Action<OrdenTrabajo>(this.attach_OrdenTrabajo), new Action<OrdenTrabajo>(this.detach_OrdenTrabajo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ClienteFinal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_ClienteFinal
		{
			get
			{
				return this._Id_ClienteFinal;
			}
			set
			{
				if ((this._Id_ClienteFinal != value))
				{
					this.OnId_ClienteFinalChanging(value);
					this.SendPropertyChanging();
					this._Id_ClienteFinal = value;
					this.SendPropertyChanged("Id_ClienteFinal");
					this.OnId_ClienteFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cli_Nombre", DbType="VarChar(50)")]
		public string Cli_Nombre
		{
			get
			{
				return this._Cli_Nombre;
			}
			set
			{
				if ((this._Cli_Nombre != value))
				{
					this.OnCli_NombreChanging(value);
					this.SendPropertyChanging();
					this._Cli_Nombre = value;
					this.SendPropertyChanged("Cli_Nombre");
					this.OnCli_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cli_Direccion", DbType="VarChar(100)")]
		public string Cli_Direccion
		{
			get
			{
				return this._Cli_Direccion;
			}
			set
			{
				if ((this._Cli_Direccion != value))
				{
					this.OnCli_DireccionChanging(value);
					this.SendPropertyChanging();
					this._Cli_Direccion = value;
					this.SendPropertyChanged("Cli_Direccion");
					this.OnCli_DireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cli_Estado", DbType="Char(1)")]
		public System.Nullable<char> Cli_Estado
		{
			get
			{
				return this._Cli_Estado;
			}
			set
			{
				if ((this._Cli_Estado != value))
				{
					this.OnCli_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Cli_Estado = value;
					this.SendPropertyChanged("Cli_Estado");
					this.OnCli_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClienteFinal_Clientes_Ciudad", Storage="_Clientes_Ciudad", ThisKey="Id_ClienteFinal", OtherKey="Id_ClienteFinal")]
		public EntitySet<Clientes_Ciudad> Clientes_Ciudad
		{
			get
			{
				return this._Clientes_Ciudad;
			}
			set
			{
				this._Clientes_Ciudad.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClienteFinal_Clientes_Operadora", Storage="_Clientes_Operadora", ThisKey="Id_ClienteFinal", OtherKey="Id_ClienteFinal")]
		public EntitySet<Clientes_Operadora> Clientes_Operadora
		{
			get
			{
				return this._Clientes_Operadora;
			}
			set
			{
				this._Clientes_Operadora.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClienteFinal_OrdenTrabajo", Storage="_OrdenTrabajo", ThisKey="Id_ClienteFinal", OtherKey="Id_ClienteFinal")]
		public EntitySet<OrdenTrabajo> OrdenTrabajo
		{
			get
			{
				return this._OrdenTrabajo;
			}
			set
			{
				this._OrdenTrabajo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes_Ciudad(Clientes_Ciudad entity)
		{
			this.SendPropertyChanging();
			entity.ClienteFinal = this;
		}
		
		private void detach_Clientes_Ciudad(Clientes_Ciudad entity)
		{
			this.SendPropertyChanging();
			entity.ClienteFinal = null;
		}
		
		private void attach_Clientes_Operadora(Clientes_Operadora entity)
		{
			this.SendPropertyChanging();
			entity.ClienteFinal = this;
		}
		
		private void detach_Clientes_Operadora(Clientes_Operadora entity)
		{
			this.SendPropertyChanging();
			entity.ClienteFinal = null;
		}
		
		private void attach_OrdenTrabajo(OrdenTrabajo entity)
		{
			this.SendPropertyChanging();
			entity.ClienteFinal = this;
		}
		
		private void detach_OrdenTrabajo(OrdenTrabajo entity)
		{
			this.SendPropertyChanging();
			entity.ClienteFinal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clientes_Ciudad")]
	public partial class Clientes_Ciudad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_ClientesCiudad;
		
		private int _Id_Ciudad;
		
		private int _Id_ClienteFinal;
		
		private string _CCiu_NombreSucursal;
		
		private string _CCiu_Direccion;
		
		private System.Nullable<char> _CCiu_Estado;
		
		private EntityRef<Ciudad> _Ciudad;
		
		private EntityRef<ClienteFinal> _ClienteFinal;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ClientesCiudadChanging(int value);
    partial void OnId_ClientesCiudadChanged();
    partial void OnId_CiudadChanging(int value);
    partial void OnId_CiudadChanged();
    partial void OnId_ClienteFinalChanging(int value);
    partial void OnId_ClienteFinalChanged();
    partial void OnCCiu_NombreSucursalChanging(string value);
    partial void OnCCiu_NombreSucursalChanged();
    partial void OnCCiu_DireccionChanging(string value);
    partial void OnCCiu_DireccionChanged();
    partial void OnCCiu_EstadoChanging(System.Nullable<char> value);
    partial void OnCCiu_EstadoChanged();
    #endregion
		
		public Clientes_Ciudad()
		{
			this._Ciudad = default(EntityRef<Ciudad>);
			this._ClienteFinal = default(EntityRef<ClienteFinal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ClientesCiudad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_ClientesCiudad
		{
			get
			{
				return this._Id_ClientesCiudad;
			}
			set
			{
				if ((this._Id_ClientesCiudad != value))
				{
					this.OnId_ClientesCiudadChanging(value);
					this.SendPropertyChanging();
					this._Id_ClientesCiudad = value;
					this.SendPropertyChanged("Id_ClientesCiudad");
					this.OnId_ClientesCiudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Ciudad", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Ciudad
		{
			get
			{
				return this._Id_Ciudad;
			}
			set
			{
				if ((this._Id_Ciudad != value))
				{
					if (this._Ciudad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_CiudadChanging(value);
					this.SendPropertyChanging();
					this._Id_Ciudad = value;
					this.SendPropertyChanged("Id_Ciudad");
					this.OnId_CiudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ClienteFinal", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_ClienteFinal
		{
			get
			{
				return this._Id_ClienteFinal;
			}
			set
			{
				if ((this._Id_ClienteFinal != value))
				{
					if (this._ClienteFinal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ClienteFinalChanging(value);
					this.SendPropertyChanging();
					this._Id_ClienteFinal = value;
					this.SendPropertyChanged("Id_ClienteFinal");
					this.OnId_ClienteFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCiu_NombreSucursal", DbType="VarChar(100)")]
		public string CCiu_NombreSucursal
		{
			get
			{
				return this._CCiu_NombreSucursal;
			}
			set
			{
				if ((this._CCiu_NombreSucursal != value))
				{
					this.OnCCiu_NombreSucursalChanging(value);
					this.SendPropertyChanging();
					this._CCiu_NombreSucursal = value;
					this.SendPropertyChanged("CCiu_NombreSucursal");
					this.OnCCiu_NombreSucursalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCiu_Direccion", DbType="VarChar(150)")]
		public string CCiu_Direccion
		{
			get
			{
				return this._CCiu_Direccion;
			}
			set
			{
				if ((this._CCiu_Direccion != value))
				{
					this.OnCCiu_DireccionChanging(value);
					this.SendPropertyChanging();
					this._CCiu_Direccion = value;
					this.SendPropertyChanged("CCiu_Direccion");
					this.OnCCiu_DireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCiu_Estado", DbType="Char(1)")]
		public System.Nullable<char> CCiu_Estado
		{
			get
			{
				return this._CCiu_Estado;
			}
			set
			{
				if ((this._CCiu_Estado != value))
				{
					this.OnCCiu_EstadoChanging(value);
					this.SendPropertyChanging();
					this._CCiu_Estado = value;
					this.SendPropertyChanged("CCiu_Estado");
					this.OnCCiu_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudad_Clientes_Ciudad", Storage="_Ciudad", ThisKey="Id_Ciudad", OtherKey="Id_Ciudad", IsForeignKey=true)]
		public Ciudad Ciudad
		{
			get
			{
				return this._Ciudad.Entity;
			}
			set
			{
				Ciudad previousValue = this._Ciudad.Entity;
				if (((previousValue != value) 
							|| (this._Ciudad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ciudad.Entity = null;
						previousValue.Clientes_Ciudad.Remove(this);
					}
					this._Ciudad.Entity = value;
					if ((value != null))
					{
						value.Clientes_Ciudad.Add(this);
						this._Id_Ciudad = value.Id_Ciudad;
					}
					else
					{
						this._Id_Ciudad = default(int);
					}
					this.SendPropertyChanged("Ciudad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClienteFinal_Clientes_Ciudad", Storage="_ClienteFinal", ThisKey="Id_ClienteFinal", OtherKey="Id_ClienteFinal", IsForeignKey=true)]
		public ClienteFinal ClienteFinal
		{
			get
			{
				return this._ClienteFinal.Entity;
			}
			set
			{
				ClienteFinal previousValue = this._ClienteFinal.Entity;
				if (((previousValue != value) 
							|| (this._ClienteFinal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClienteFinal.Entity = null;
						previousValue.Clientes_Ciudad.Remove(this);
					}
					this._ClienteFinal.Entity = value;
					if ((value != null))
					{
						value.Clientes_Ciudad.Add(this);
						this._Id_ClienteFinal = value.Id_ClienteFinal;
					}
					else
					{
						this._Id_ClienteFinal = default(int);
					}
					this.SendPropertyChanged("ClienteFinal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clientes_Operadora")]
	public partial class Clientes_Operadora : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_ClienteOperadora;
		
		private int _Id_ClienteExterno;
		
		private int _Id_ClienteFinal;
		
		private int _Id_Operadora;
		
		private System.Nullable<char> _CO_Estado;
		
		private EntityRef<ClienteFinal> _ClienteFinal;
		
		private EntityRef<Operadora> _Operadora;
		
		private EntityRef<ClienteExterno> _ClienteExterno;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ClienteOperadoraChanging(int value);
    partial void OnId_ClienteOperadoraChanged();
    partial void OnId_ClienteExternoChanging(int value);
    partial void OnId_ClienteExternoChanged();
    partial void OnId_ClienteFinalChanging(int value);
    partial void OnId_ClienteFinalChanged();
    partial void OnId_OperadoraChanging(int value);
    partial void OnId_OperadoraChanged();
    partial void OnCO_EstadoChanging(System.Nullable<char> value);
    partial void OnCO_EstadoChanged();
    #endregion
		
		public Clientes_Operadora()
		{
			this._ClienteFinal = default(EntityRef<ClienteFinal>);
			this._Operadora = default(EntityRef<Operadora>);
			this._ClienteExterno = default(EntityRef<ClienteExterno>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ClienteOperadora", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_ClienteOperadora
		{
			get
			{
				return this._Id_ClienteOperadora;
			}
			set
			{
				if ((this._Id_ClienteOperadora != value))
				{
					this.OnId_ClienteOperadoraChanging(value);
					this.SendPropertyChanging();
					this._Id_ClienteOperadora = value;
					this.SendPropertyChanged("Id_ClienteOperadora");
					this.OnId_ClienteOperadoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ClienteExterno", DbType="Int NOT NULL")]
		public int Id_ClienteExterno
		{
			get
			{
				return this._Id_ClienteExterno;
			}
			set
			{
				if ((this._Id_ClienteExterno != value))
				{
					if (this._ClienteExterno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ClienteExternoChanging(value);
					this.SendPropertyChanging();
					this._Id_ClienteExterno = value;
					this.SendPropertyChanged("Id_ClienteExterno");
					this.OnId_ClienteExternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ClienteFinal", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_ClienteFinal
		{
			get
			{
				return this._Id_ClienteFinal;
			}
			set
			{
				if ((this._Id_ClienteFinal != value))
				{
					if (this._ClienteFinal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ClienteFinalChanging(value);
					this.SendPropertyChanging();
					this._Id_ClienteFinal = value;
					this.SendPropertyChanged("Id_ClienteFinal");
					this.OnId_ClienteFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Operadora", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Operadora
		{
			get
			{
				return this._Id_Operadora;
			}
			set
			{
				if ((this._Id_Operadora != value))
				{
					if (this._Operadora.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_OperadoraChanging(value);
					this.SendPropertyChanging();
					this._Id_Operadora = value;
					this.SendPropertyChanged("Id_Operadora");
					this.OnId_OperadoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CO_Estado", DbType="Char(1)")]
		public System.Nullable<char> CO_Estado
		{
			get
			{
				return this._CO_Estado;
			}
			set
			{
				if ((this._CO_Estado != value))
				{
					this.OnCO_EstadoChanging(value);
					this.SendPropertyChanging();
					this._CO_Estado = value;
					this.SendPropertyChanged("CO_Estado");
					this.OnCO_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClienteFinal_Clientes_Operadora", Storage="_ClienteFinal", ThisKey="Id_ClienteFinal", OtherKey="Id_ClienteFinal", IsForeignKey=true)]
		public ClienteFinal ClienteFinal
		{
			get
			{
				return this._ClienteFinal.Entity;
			}
			set
			{
				ClienteFinal previousValue = this._ClienteFinal.Entity;
				if (((previousValue != value) 
							|| (this._ClienteFinal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClienteFinal.Entity = null;
						previousValue.Clientes_Operadora.Remove(this);
					}
					this._ClienteFinal.Entity = value;
					if ((value != null))
					{
						value.Clientes_Operadora.Add(this);
						this._Id_ClienteFinal = value.Id_ClienteFinal;
					}
					else
					{
						this._Id_ClienteFinal = default(int);
					}
					this.SendPropertyChanged("ClienteFinal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operadora_Clientes_Operadora", Storage="_Operadora", ThisKey="Id_Operadora", OtherKey="Id_Operadora", IsForeignKey=true)]
		public Operadora Operadora
		{
			get
			{
				return this._Operadora.Entity;
			}
			set
			{
				Operadora previousValue = this._Operadora.Entity;
				if (((previousValue != value) 
							|| (this._Operadora.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Operadora.Entity = null;
						previousValue.Clientes_Operadora.Remove(this);
					}
					this._Operadora.Entity = value;
					if ((value != null))
					{
						value.Clientes_Operadora.Add(this);
						this._Id_Operadora = value.Id_Operadora;
					}
					else
					{
						this._Id_Operadora = default(int);
					}
					this.SendPropertyChanged("Operadora");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClienteExterno_Clientes_Operadora", Storage="_ClienteExterno", ThisKey="Id_ClienteExterno", OtherKey="Id_ClienteExterno", IsForeignKey=true)]
		public ClienteExterno ClienteExterno
		{
			get
			{
				return this._ClienteExterno.Entity;
			}
			set
			{
				ClienteExterno previousValue = this._ClienteExterno.Entity;
				if (((previousValue != value) 
							|| (this._ClienteExterno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClienteExterno.Entity = null;
						previousValue.Clientes_Operadora.Remove(this);
					}
					this._ClienteExterno.Entity = value;
					if ((value != null))
					{
						value.Clientes_Operadora.Add(this);
						this._Id_ClienteExterno = value.Id_ClienteExterno;
					}
					else
					{
						this._Id_ClienteExterno = default(int);
					}
					this.SendPropertyChanged("ClienteExterno");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetalleMateriales")]
	public partial class DetalleMateriales : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_DetalleMateriales;
		
		private int _Id_DetalleOT;
		
		private int _Id_BodegaMaterial;
		
		private System.Nullable<int> _DMat_SalidaMaterial;
		
		private char _DMat_Estado;
		
		private EntityRef<BodegaMateriales> _BodegaMateriales;
		
		private EntityRef<DetalleOT> _DetalleOT;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_DetalleMaterialesChanging(int value);
    partial void OnId_DetalleMaterialesChanged();
    partial void OnId_DetalleOTChanging(int value);
    partial void OnId_DetalleOTChanged();
    partial void OnId_BodegaMaterialChanging(int value);
    partial void OnId_BodegaMaterialChanged();
    partial void OnDMat_SalidaMaterialChanging(System.Nullable<int> value);
    partial void OnDMat_SalidaMaterialChanged();
    partial void OnDMat_EstadoChanging(char value);
    partial void OnDMat_EstadoChanged();
    #endregion
		
		public DetalleMateriales()
		{
			this._BodegaMateriales = default(EntityRef<BodegaMateriales>);
			this._DetalleOT = default(EntityRef<DetalleOT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_DetalleMateriales", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_DetalleMateriales
		{
			get
			{
				return this._Id_DetalleMateriales;
			}
			set
			{
				if ((this._Id_DetalleMateriales != value))
				{
					this.OnId_DetalleMaterialesChanging(value);
					this.SendPropertyChanging();
					this._Id_DetalleMateriales = value;
					this.SendPropertyChanged("Id_DetalleMateriales");
					this.OnId_DetalleMaterialesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_DetalleOT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_DetalleOT
		{
			get
			{
				return this._Id_DetalleOT;
			}
			set
			{
				if ((this._Id_DetalleOT != value))
				{
					if (this._DetalleOT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_DetalleOTChanging(value);
					this.SendPropertyChanging();
					this._Id_DetalleOT = value;
					this.SendPropertyChanged("Id_DetalleOT");
					this.OnId_DetalleOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_BodegaMaterial", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_BodegaMaterial
		{
			get
			{
				return this._Id_BodegaMaterial;
			}
			set
			{
				if ((this._Id_BodegaMaterial != value))
				{
					if (this._BodegaMateriales.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_BodegaMaterialChanging(value);
					this.SendPropertyChanging();
					this._Id_BodegaMaterial = value;
					this.SendPropertyChanged("Id_BodegaMaterial");
					this.OnId_BodegaMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMat_SalidaMaterial", DbType="Int")]
		public System.Nullable<int> DMat_SalidaMaterial
		{
			get
			{
				return this._DMat_SalidaMaterial;
			}
			set
			{
				if ((this._DMat_SalidaMaterial != value))
				{
					this.OnDMat_SalidaMaterialChanging(value);
					this.SendPropertyChanging();
					this._DMat_SalidaMaterial = value;
					this.SendPropertyChanged("DMat_SalidaMaterial");
					this.OnDMat_SalidaMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMat_Estado", DbType="Char(1) NOT NULL")]
		public char DMat_Estado
		{
			get
			{
				return this._DMat_Estado;
			}
			set
			{
				if ((this._DMat_Estado != value))
				{
					this.OnDMat_EstadoChanging(value);
					this.SendPropertyChanging();
					this._DMat_Estado = value;
					this.SendPropertyChanged("DMat_Estado");
					this.OnDMat_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BodegaMateriales_DetalleMateriales", Storage="_BodegaMateriales", ThisKey="Id_BodegaMaterial", OtherKey="Id_BodegaMaterial", IsForeignKey=true)]
		public BodegaMateriales BodegaMateriales
		{
			get
			{
				return this._BodegaMateriales.Entity;
			}
			set
			{
				BodegaMateriales previousValue = this._BodegaMateriales.Entity;
				if (((previousValue != value) 
							|| (this._BodegaMateriales.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BodegaMateriales.Entity = null;
						previousValue.DetalleMateriales.Remove(this);
					}
					this._BodegaMateriales.Entity = value;
					if ((value != null))
					{
						value.DetalleMateriales.Add(this);
						this._Id_BodegaMaterial = value.Id_BodegaMaterial;
					}
					else
					{
						this._Id_BodegaMaterial = default(int);
					}
					this.SendPropertyChanged("BodegaMateriales");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DetalleOT_DetalleMateriales", Storage="_DetalleOT", ThisKey="Id_DetalleOT", OtherKey="Id_DetalleOT", IsForeignKey=true)]
		public DetalleOT DetalleOT
		{
			get
			{
				return this._DetalleOT.Entity;
			}
			set
			{
				DetalleOT previousValue = this._DetalleOT.Entity;
				if (((previousValue != value) 
							|| (this._DetalleOT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DetalleOT.Entity = null;
						previousValue.DetalleMateriales.Remove(this);
					}
					this._DetalleOT.Entity = value;
					if ((value != null))
					{
						value.DetalleMateriales.Add(this);
						this._Id_DetalleOT = value.Id_DetalleOT;
					}
					else
					{
						this._Id_DetalleOT = default(int);
					}
					this.SendPropertyChanged("DetalleOT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetalleOT")]
	public partial class DetalleOT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_DetalleOT;
		
		private int _Id_Actividad;
		
		private int _Id_OrdeTrabajo;
		
		private string _Det_DescripcionAct;
		
		private string _Det_ImagenCliente;
		
		private string _Det_ImagenNodo;
		
		private string _Det_Observaciones;
		
		private System.Nullable<int> _Det_cantidad;
		
		private System.Nullable<char> _Det_Estado;
		
		private EntitySet<DetalleMateriales> _DetalleMateriales;
		
		private EntitySet<DetalleOT_Usuarios> _DetalleOT_Usuarios;
		
		private EntityRef<Actividad> _Actividad;
		
		private EntityRef<OrdenTrabajo> _OrdenTrabajo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_DetalleOTChanging(int value);
    partial void OnId_DetalleOTChanged();
    partial void OnId_ActividadChanging(int value);
    partial void OnId_ActividadChanged();
    partial void OnId_OrdeTrabajoChanging(int value);
    partial void OnId_OrdeTrabajoChanged();
    partial void OnDet_DescripcionActChanging(string value);
    partial void OnDet_DescripcionActChanged();
    partial void OnDet_ImagenClienteChanging(string value);
    partial void OnDet_ImagenClienteChanged();
    partial void OnDet_ImagenNodoChanging(string value);
    partial void OnDet_ImagenNodoChanged();
    partial void OnDet_ObservacionesChanging(string value);
    partial void OnDet_ObservacionesChanged();
    partial void OnDet_cantidadChanging(System.Nullable<int> value);
    partial void OnDet_cantidadChanged();
    partial void OnDet_EstadoChanging(System.Nullable<char> value);
    partial void OnDet_EstadoChanged();
    #endregion
		
		public DetalleOT()
		{
			this._DetalleMateriales = new EntitySet<DetalleMateriales>(new Action<DetalleMateriales>(this.attach_DetalleMateriales), new Action<DetalleMateriales>(this.detach_DetalleMateriales));
			this._DetalleOT_Usuarios = new EntitySet<DetalleOT_Usuarios>(new Action<DetalleOT_Usuarios>(this.attach_DetalleOT_Usuarios), new Action<DetalleOT_Usuarios>(this.detach_DetalleOT_Usuarios));
			this._Actividad = default(EntityRef<Actividad>);
			this._OrdenTrabajo = default(EntityRef<OrdenTrabajo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_DetalleOT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_DetalleOT
		{
			get
			{
				return this._Id_DetalleOT;
			}
			set
			{
				if ((this._Id_DetalleOT != value))
				{
					this.OnId_DetalleOTChanging(value);
					this.SendPropertyChanging();
					this._Id_DetalleOT = value;
					this.SendPropertyChanged("Id_DetalleOT");
					this.OnId_DetalleOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Actividad", DbType="Int NOT NULL")]
		public int Id_Actividad
		{
			get
			{
				return this._Id_Actividad;
			}
			set
			{
				if ((this._Id_Actividad != value))
				{
					if (this._Actividad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ActividadChanging(value);
					this.SendPropertyChanging();
					this._Id_Actividad = value;
					this.SendPropertyChanged("Id_Actividad");
					this.OnId_ActividadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_OrdeTrabajo", DbType="Int NOT NULL")]
		public int Id_OrdeTrabajo
		{
			get
			{
				return this._Id_OrdeTrabajo;
			}
			set
			{
				if ((this._Id_OrdeTrabajo != value))
				{
					if (this._OrdenTrabajo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_OrdeTrabajoChanging(value);
					this.SendPropertyChanging();
					this._Id_OrdeTrabajo = value;
					this.SendPropertyChanged("Id_OrdeTrabajo");
					this.OnId_OrdeTrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Det_DescripcionAct", DbType="VarChar(200)")]
		public string Det_DescripcionAct
		{
			get
			{
				return this._Det_DescripcionAct;
			}
			set
			{
				if ((this._Det_DescripcionAct != value))
				{
					this.OnDet_DescripcionActChanging(value);
					this.SendPropertyChanging();
					this._Det_DescripcionAct = value;
					this.SendPropertyChanged("Det_DescripcionAct");
					this.OnDet_DescripcionActChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Det_ImagenCliente", DbType="VarChar(20)")]
		public string Det_ImagenCliente
		{
			get
			{
				return this._Det_ImagenCliente;
			}
			set
			{
				if ((this._Det_ImagenCliente != value))
				{
					this.OnDet_ImagenClienteChanging(value);
					this.SendPropertyChanging();
					this._Det_ImagenCliente = value;
					this.SendPropertyChanged("Det_ImagenCliente");
					this.OnDet_ImagenClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Det_ImagenNodo", DbType="VarChar(20)")]
		public string Det_ImagenNodo
		{
			get
			{
				return this._Det_ImagenNodo;
			}
			set
			{
				if ((this._Det_ImagenNodo != value))
				{
					this.OnDet_ImagenNodoChanging(value);
					this.SendPropertyChanging();
					this._Det_ImagenNodo = value;
					this.SendPropertyChanged("Det_ImagenNodo");
					this.OnDet_ImagenNodoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Det_Observaciones", DbType="VarChar(20)")]
		public string Det_Observaciones
		{
			get
			{
				return this._Det_Observaciones;
			}
			set
			{
				if ((this._Det_Observaciones != value))
				{
					this.OnDet_ObservacionesChanging(value);
					this.SendPropertyChanging();
					this._Det_Observaciones = value;
					this.SendPropertyChanged("Det_Observaciones");
					this.OnDet_ObservacionesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Det_cantidad", DbType="Int")]
		public System.Nullable<int> Det_cantidad
		{
			get
			{
				return this._Det_cantidad;
			}
			set
			{
				if ((this._Det_cantidad != value))
				{
					this.OnDet_cantidadChanging(value);
					this.SendPropertyChanging();
					this._Det_cantidad = value;
					this.SendPropertyChanged("Det_cantidad");
					this.OnDet_cantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Det_Estado", DbType="Char(1)")]
		public System.Nullable<char> Det_Estado
		{
			get
			{
				return this._Det_Estado;
			}
			set
			{
				if ((this._Det_Estado != value))
				{
					this.OnDet_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Det_Estado = value;
					this.SendPropertyChanged("Det_Estado");
					this.OnDet_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DetalleOT_DetalleMateriales", Storage="_DetalleMateriales", ThisKey="Id_DetalleOT", OtherKey="Id_DetalleOT")]
		public EntitySet<DetalleMateriales> DetalleMateriales
		{
			get
			{
				return this._DetalleMateriales;
			}
			set
			{
				this._DetalleMateriales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DetalleOT_DetalleOT_Usuarios", Storage="_DetalleOT_Usuarios", ThisKey="Id_DetalleOT", OtherKey="Id_DetalleOT")]
		public EntitySet<DetalleOT_Usuarios> DetalleOT_Usuarios
		{
			get
			{
				return this._DetalleOT_Usuarios;
			}
			set
			{
				this._DetalleOT_Usuarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actividad_DetalleOT", Storage="_Actividad", ThisKey="Id_Actividad", OtherKey="Id_Actividad", IsForeignKey=true)]
		public Actividad Actividad
		{
			get
			{
				return this._Actividad.Entity;
			}
			set
			{
				Actividad previousValue = this._Actividad.Entity;
				if (((previousValue != value) 
							|| (this._Actividad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Actividad.Entity = null;
						previousValue.DetalleOT.Remove(this);
					}
					this._Actividad.Entity = value;
					if ((value != null))
					{
						value.DetalleOT.Add(this);
						this._Id_Actividad = value.Id_Actividad;
					}
					else
					{
						this._Id_Actividad = default(int);
					}
					this.SendPropertyChanged("Actividad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrdenTrabajo_DetalleOT", Storage="_OrdenTrabajo", ThisKey="Id_OrdeTrabajo", OtherKey="Id_OrdeTrabajo", IsForeignKey=true)]
		public OrdenTrabajo OrdenTrabajo
		{
			get
			{
				return this._OrdenTrabajo.Entity;
			}
			set
			{
				OrdenTrabajo previousValue = this._OrdenTrabajo.Entity;
				if (((previousValue != value) 
							|| (this._OrdenTrabajo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrdenTrabajo.Entity = null;
						previousValue.DetalleOT.Remove(this);
					}
					this._OrdenTrabajo.Entity = value;
					if ((value != null))
					{
						value.DetalleOT.Add(this);
						this._Id_OrdeTrabajo = value.Id_OrdeTrabajo;
					}
					else
					{
						this._Id_OrdeTrabajo = default(int);
					}
					this.SendPropertyChanged("OrdenTrabajo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleMateriales(DetalleMateriales entity)
		{
			this.SendPropertyChanging();
			entity.DetalleOT = this;
		}
		
		private void detach_DetalleMateriales(DetalleMateriales entity)
		{
			this.SendPropertyChanging();
			entity.DetalleOT = null;
		}
		
		private void attach_DetalleOT_Usuarios(DetalleOT_Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.DetalleOT = this;
		}
		
		private void detach_DetalleOT_Usuarios(DetalleOT_Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.DetalleOT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetalleOT_Usuarios")]
	public partial class DetalleOT_Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Detalle;
		
		private int _Id_DetalleOT;
		
		private int _Id_Usuario;
		
		private System.Nullable<System.DateTime> _DUsu_FechaInicioTrabajos;
		
		private System.Nullable<System.DateTime> _DUsu_FechaFinTrabajos;
		
		private string _DUsu_Estado;
		
		private EntityRef<DetalleOT> _DetalleOT;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_DetalleChanging(int value);
    partial void OnId_DetalleChanged();
    partial void OnId_DetalleOTChanging(int value);
    partial void OnId_DetalleOTChanged();
    partial void OnId_UsuarioChanging(int value);
    partial void OnId_UsuarioChanged();
    partial void OnDUsu_FechaInicioTrabajosChanging(System.Nullable<System.DateTime> value);
    partial void OnDUsu_FechaInicioTrabajosChanged();
    partial void OnDUsu_FechaFinTrabajosChanging(System.Nullable<System.DateTime> value);
    partial void OnDUsu_FechaFinTrabajosChanged();
    partial void OnDUsu_EstadoChanging(string value);
    partial void OnDUsu_EstadoChanged();
    #endregion
		
		public DetalleOT_Usuarios()
		{
			this._DetalleOT = default(EntityRef<DetalleOT>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Detalle", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Detalle
		{
			get
			{
				return this._Id_Detalle;
			}
			set
			{
				if ((this._Id_Detalle != value))
				{
					this.OnId_DetalleChanging(value);
					this.SendPropertyChanging();
					this._Id_Detalle = value;
					this.SendPropertyChanged("Id_Detalle");
					this.OnId_DetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_DetalleOT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_DetalleOT
		{
			get
			{
				return this._Id_DetalleOT;
			}
			set
			{
				if ((this._Id_DetalleOT != value))
				{
					if (this._DetalleOT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_DetalleOTChanging(value);
					this.SendPropertyChanging();
					this._Id_DetalleOT = value;
					this.SendPropertyChanged("Id_DetalleOT");
					this.OnId_DetalleOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Usuario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Usuario
		{
			get
			{
				return this._Id_Usuario;
			}
			set
			{
				if ((this._Id_Usuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._Id_Usuario = value;
					this.SendPropertyChanged("Id_Usuario");
					this.OnId_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUsu_FechaInicioTrabajos", DbType="DateTime")]
		public System.Nullable<System.DateTime> DUsu_FechaInicioTrabajos
		{
			get
			{
				return this._DUsu_FechaInicioTrabajos;
			}
			set
			{
				if ((this._DUsu_FechaInicioTrabajos != value))
				{
					this.OnDUsu_FechaInicioTrabajosChanging(value);
					this.SendPropertyChanging();
					this._DUsu_FechaInicioTrabajos = value;
					this.SendPropertyChanged("DUsu_FechaInicioTrabajos");
					this.OnDUsu_FechaInicioTrabajosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUsu_FechaFinTrabajos", DbType="DateTime")]
		public System.Nullable<System.DateTime> DUsu_FechaFinTrabajos
		{
			get
			{
				return this._DUsu_FechaFinTrabajos;
			}
			set
			{
				if ((this._DUsu_FechaFinTrabajos != value))
				{
					this.OnDUsu_FechaFinTrabajosChanging(value);
					this.SendPropertyChanging();
					this._DUsu_FechaFinTrabajos = value;
					this.SendPropertyChanged("DUsu_FechaFinTrabajos");
					this.OnDUsu_FechaFinTrabajosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUsu_Estado", DbType="Char(10)")]
		public string DUsu_Estado
		{
			get
			{
				return this._DUsu_Estado;
			}
			set
			{
				if ((this._DUsu_Estado != value))
				{
					this.OnDUsu_EstadoChanging(value);
					this.SendPropertyChanging();
					this._DUsu_Estado = value;
					this.SendPropertyChanged("DUsu_Estado");
					this.OnDUsu_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DetalleOT_DetalleOT_Usuarios", Storage="_DetalleOT", ThisKey="Id_DetalleOT", OtherKey="Id_DetalleOT", IsForeignKey=true)]
		public DetalleOT DetalleOT
		{
			get
			{
				return this._DetalleOT.Entity;
			}
			set
			{
				DetalleOT previousValue = this._DetalleOT.Entity;
				if (((previousValue != value) 
							|| (this._DetalleOT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DetalleOT.Entity = null;
						previousValue.DetalleOT_Usuarios.Remove(this);
					}
					this._DetalleOT.Entity = value;
					if ((value != null))
					{
						value.DetalleOT_Usuarios.Add(this);
						this._Id_DetalleOT = value.Id_DetalleOT;
					}
					else
					{
						this._Id_DetalleOT = default(int);
					}
					this.SendPropertyChanged("DetalleOT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_DetalleOT_Usuarios", Storage="_Usuario", ThisKey="Id_Usuario", OtherKey="Id_Usuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.DetalleOT_Usuarios.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.DetalleOT_Usuarios.Add(this);
						this._Id_Usuario = value.Id_Usuario;
					}
					else
					{
						this._Id_Usuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Materiales")]
	public partial class Materiales : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Materiales;
		
		private string _Mat_Nombre;
		
		private string _Mat_Descripcion;
		
		private System.Nullable<char> _Mat_Estado;
		
		private int _Id_TipoMaterial;
		
		private EntitySet<BodegaMateriales> _BodegaMateriales;
		
		private EntityRef<TipoMaterial> _TipoMaterial;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_MaterialesChanging(int value);
    partial void OnId_MaterialesChanged();
    partial void OnMat_NombreChanging(string value);
    partial void OnMat_NombreChanged();
    partial void OnMat_DescripcionChanging(string value);
    partial void OnMat_DescripcionChanged();
    partial void OnMat_EstadoChanging(System.Nullable<char> value);
    partial void OnMat_EstadoChanged();
    partial void OnId_TipoMaterialChanging(int value);
    partial void OnId_TipoMaterialChanged();
    #endregion
		
		public Materiales()
		{
			this._BodegaMateriales = new EntitySet<BodegaMateriales>(new Action<BodegaMateriales>(this.attach_BodegaMateriales), new Action<BodegaMateriales>(this.detach_BodegaMateriales));
			this._TipoMaterial = default(EntityRef<TipoMaterial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Materiales", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Materiales
		{
			get
			{
				return this._Id_Materiales;
			}
			set
			{
				if ((this._Id_Materiales != value))
				{
					this.OnId_MaterialesChanging(value);
					this.SendPropertyChanging();
					this._Id_Materiales = value;
					this.SendPropertyChanged("Id_Materiales");
					this.OnId_MaterialesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Nombre", DbType="VarChar(50)")]
		public string Mat_Nombre
		{
			get
			{
				return this._Mat_Nombre;
			}
			set
			{
				if ((this._Mat_Nombre != value))
				{
					this.OnMat_NombreChanging(value);
					this.SendPropertyChanging();
					this._Mat_Nombre = value;
					this.SendPropertyChanged("Mat_Nombre");
					this.OnMat_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Descripcion", DbType="VarChar(100)")]
		public string Mat_Descripcion
		{
			get
			{
				return this._Mat_Descripcion;
			}
			set
			{
				if ((this._Mat_Descripcion != value))
				{
					this.OnMat_DescripcionChanging(value);
					this.SendPropertyChanging();
					this._Mat_Descripcion = value;
					this.SendPropertyChanged("Mat_Descripcion");
					this.OnMat_DescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat_Estado", DbType="Char(1)")]
		public System.Nullable<char> Mat_Estado
		{
			get
			{
				return this._Mat_Estado;
			}
			set
			{
				if ((this._Mat_Estado != value))
				{
					this.OnMat_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Mat_Estado = value;
					this.SendPropertyChanged("Mat_Estado");
					this.OnMat_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_TipoMaterial", DbType="Int NOT NULL")]
		public int Id_TipoMaterial
		{
			get
			{
				return this._Id_TipoMaterial;
			}
			set
			{
				if ((this._Id_TipoMaterial != value))
				{
					if (this._TipoMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_TipoMaterialChanging(value);
					this.SendPropertyChanging();
					this._Id_TipoMaterial = value;
					this.SendPropertyChanged("Id_TipoMaterial");
					this.OnId_TipoMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materiales_BodegaMateriales", Storage="_BodegaMateriales", ThisKey="Id_Materiales", OtherKey="Id_Materiales")]
		public EntitySet<BodegaMateriales> BodegaMateriales
		{
			get
			{
				return this._BodegaMateriales;
			}
			set
			{
				this._BodegaMateriales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoMaterial_Materiales", Storage="_TipoMaterial", ThisKey="Id_TipoMaterial", OtherKey="Id_TipoMaterial", IsForeignKey=true)]
		public TipoMaterial TipoMaterial
		{
			get
			{
				return this._TipoMaterial.Entity;
			}
			set
			{
				TipoMaterial previousValue = this._TipoMaterial.Entity;
				if (((previousValue != value) 
							|| (this._TipoMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoMaterial.Entity = null;
						previousValue.Materiales.Remove(this);
					}
					this._TipoMaterial.Entity = value;
					if ((value != null))
					{
						value.Materiales.Add(this);
						this._Id_TipoMaterial = value.Id_TipoMaterial;
					}
					else
					{
						this._Id_TipoMaterial = default(int);
					}
					this.SendPropertyChanged("TipoMaterial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BodegaMateriales(BodegaMateriales entity)
		{
			this.SendPropertyChanging();
			entity.Materiales = this;
		}
		
		private void detach_BodegaMateriales(BodegaMateriales entity)
		{
			this.SendPropertyChanging();
			entity.Materiales = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menus")]
	public partial class Menus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuId;
		
		private int _ParentMenuId;
		
		private string _Title;
		
		private string _Description;
		
		private string _Url;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    partial void OnParentMenuIdChanging(int value);
    partial void OnParentMenuIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public Menus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentMenuId", DbType="Int NOT NULL")]
		public int ParentMenuId
		{
			get
			{
				return this._ParentMenuId;
			}
			set
			{
				if ((this._ParentMenuId != value))
				{
					this.OnParentMenuIdChanging(value);
					this.SendPropertyChanging();
					this._ParentMenuId = value;
					this.SendPropertyChanged("ParentMenuId");
					this.OnParentMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(100)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Operadora")]
	public partial class Operadora : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Operadora;
		
		private string _Ope_Nombre;
		
		private string _Ope_Direccion;
		
		private string _Ope_Telefono;
		
		private System.Nullable<System.DateTime> _Ope_FechaCreacion;
		
		private string _Ope_Logo;
		
		private System.Nullable<char> _Ope_Estado;
		
		private EntitySet<Clientes_Operadora> _Clientes_Operadora;
		
		private EntitySet<Tecnologia> _Tecnologia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_OperadoraChanging(int value);
    partial void OnId_OperadoraChanged();
    partial void OnOpe_NombreChanging(string value);
    partial void OnOpe_NombreChanged();
    partial void OnOpe_DireccionChanging(string value);
    partial void OnOpe_DireccionChanged();
    partial void OnOpe_TelefonoChanging(string value);
    partial void OnOpe_TelefonoChanged();
    partial void OnOpe_FechaCreacionChanging(System.Nullable<System.DateTime> value);
    partial void OnOpe_FechaCreacionChanged();
    partial void OnOpe_LogoChanging(string value);
    partial void OnOpe_LogoChanged();
    partial void OnOpe_EstadoChanging(System.Nullable<char> value);
    partial void OnOpe_EstadoChanged();
    #endregion
		
		public Operadora()
		{
			this._Clientes_Operadora = new EntitySet<Clientes_Operadora>(new Action<Clientes_Operadora>(this.attach_Clientes_Operadora), new Action<Clientes_Operadora>(this.detach_Clientes_Operadora));
			this._Tecnologia = new EntitySet<Tecnologia>(new Action<Tecnologia>(this.attach_Tecnologia), new Action<Tecnologia>(this.detach_Tecnologia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Operadora", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Operadora
		{
			get
			{
				return this._Id_Operadora;
			}
			set
			{
				if ((this._Id_Operadora != value))
				{
					this.OnId_OperadoraChanging(value);
					this.SendPropertyChanging();
					this._Id_Operadora = value;
					this.SendPropertyChanged("Id_Operadora");
					this.OnId_OperadoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ope_Nombre", DbType="VarChar(50)")]
		public string Ope_Nombre
		{
			get
			{
				return this._Ope_Nombre;
			}
			set
			{
				if ((this._Ope_Nombre != value))
				{
					this.OnOpe_NombreChanging(value);
					this.SendPropertyChanging();
					this._Ope_Nombre = value;
					this.SendPropertyChanged("Ope_Nombre");
					this.OnOpe_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ope_Direccion", DbType="VarChar(100)")]
		public string Ope_Direccion
		{
			get
			{
				return this._Ope_Direccion;
			}
			set
			{
				if ((this._Ope_Direccion != value))
				{
					this.OnOpe_DireccionChanging(value);
					this.SendPropertyChanging();
					this._Ope_Direccion = value;
					this.SendPropertyChanged("Ope_Direccion");
					this.OnOpe_DireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ope_Telefono", DbType="VarChar(10)")]
		public string Ope_Telefono
		{
			get
			{
				return this._Ope_Telefono;
			}
			set
			{
				if ((this._Ope_Telefono != value))
				{
					this.OnOpe_TelefonoChanging(value);
					this.SendPropertyChanging();
					this._Ope_Telefono = value;
					this.SendPropertyChanged("Ope_Telefono");
					this.OnOpe_TelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ope_FechaCreacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ope_FechaCreacion
		{
			get
			{
				return this._Ope_FechaCreacion;
			}
			set
			{
				if ((this._Ope_FechaCreacion != value))
				{
					this.OnOpe_FechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._Ope_FechaCreacion = value;
					this.SendPropertyChanged("Ope_FechaCreacion");
					this.OnOpe_FechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ope_Logo", DbType="VarChar(20)")]
		public string Ope_Logo
		{
			get
			{
				return this._Ope_Logo;
			}
			set
			{
				if ((this._Ope_Logo != value))
				{
					this.OnOpe_LogoChanging(value);
					this.SendPropertyChanging();
					this._Ope_Logo = value;
					this.SendPropertyChanged("Ope_Logo");
					this.OnOpe_LogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ope_Estado", DbType="Char(1)")]
		public System.Nullable<char> Ope_Estado
		{
			get
			{
				return this._Ope_Estado;
			}
			set
			{
				if ((this._Ope_Estado != value))
				{
					this.OnOpe_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Ope_Estado = value;
					this.SendPropertyChanged("Ope_Estado");
					this.OnOpe_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operadora_Clientes_Operadora", Storage="_Clientes_Operadora", ThisKey="Id_Operadora", OtherKey="Id_Operadora")]
		public EntitySet<Clientes_Operadora> Clientes_Operadora
		{
			get
			{
				return this._Clientes_Operadora;
			}
			set
			{
				this._Clientes_Operadora.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operadora_Tecnologia", Storage="_Tecnologia", ThisKey="Id_Operadora", OtherKey="Id_Operadora")]
		public EntitySet<Tecnologia> Tecnologia
		{
			get
			{
				return this._Tecnologia;
			}
			set
			{
				this._Tecnologia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes_Operadora(Clientes_Operadora entity)
		{
			this.SendPropertyChanging();
			entity.Operadora = this;
		}
		
		private void detach_Clientes_Operadora(Clientes_Operadora entity)
		{
			this.SendPropertyChanging();
			entity.Operadora = null;
		}
		
		private void attach_Tecnologia(Tecnologia entity)
		{
			this.SendPropertyChanging();
			entity.Operadora = this;
		}
		
		private void detach_Tecnologia(Tecnologia entity)
		{
			this.SendPropertyChanging();
			entity.Operadora = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrdenTrabajo")]
	public partial class OrdenTrabajo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_OrdeTrabajo;
		
		private int _Id_Tecnologia;
		
		private int _Id_ClienteFinal;
		
		private int _Id_Usuario;
		
		private int _Id_TipoTrabajo;
		
		private System.Nullable<System.DateTime> _OT_FechaSolicitud;
		
		private System.Nullable<System.DateTime> _OT_FechaCierre;
		
		private string _OT_DescripcionOT;
		
		private string _OT_TicketCliente;
		
		private string _OT_NombreNodo;
		
		private string _OT_Estado;
		
		private EntitySet<DetalleOT> _DetalleOT;
		
		private EntityRef<ClienteFinal> _ClienteFinal;
		
		private EntityRef<Tecnologia> _Tecnologia;
		
		private EntityRef<TipoTrabajo> _TipoTrabajo;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_OrdeTrabajoChanging(int value);
    partial void OnId_OrdeTrabajoChanged();
    partial void OnId_TecnologiaChanging(int value);
    partial void OnId_TecnologiaChanged();
    partial void OnId_ClienteFinalChanging(int value);
    partial void OnId_ClienteFinalChanged();
    partial void OnId_UsuarioChanging(int value);
    partial void OnId_UsuarioChanged();
    partial void OnId_TipoTrabajoChanging(int value);
    partial void OnId_TipoTrabajoChanged();
    partial void OnOT_FechaSolicitudChanging(System.Nullable<System.DateTime> value);
    partial void OnOT_FechaSolicitudChanged();
    partial void OnOT_FechaCierreChanging(System.Nullable<System.DateTime> value);
    partial void OnOT_FechaCierreChanged();
    partial void OnOT_DescripcionOTChanging(string value);
    partial void OnOT_DescripcionOTChanged();
    partial void OnOT_TicketClienteChanging(string value);
    partial void OnOT_TicketClienteChanged();
    partial void OnOT_NombreNodoChanging(string value);
    partial void OnOT_NombreNodoChanged();
    partial void OnOT_EstadoChanging(string value);
    partial void OnOT_EstadoChanged();
    #endregion
		
		public OrdenTrabajo()
		{
			this._DetalleOT = new EntitySet<DetalleOT>(new Action<DetalleOT>(this.attach_DetalleOT), new Action<DetalleOT>(this.detach_DetalleOT));
			this._ClienteFinal = default(EntityRef<ClienteFinal>);
			this._Tecnologia = default(EntityRef<Tecnologia>);
			this._TipoTrabajo = default(EntityRef<TipoTrabajo>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_OrdeTrabajo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_OrdeTrabajo
		{
			get
			{
				return this._Id_OrdeTrabajo;
			}
			set
			{
				if ((this._Id_OrdeTrabajo != value))
				{
					this.OnId_OrdeTrabajoChanging(value);
					this.SendPropertyChanging();
					this._Id_OrdeTrabajo = value;
					this.SendPropertyChanged("Id_OrdeTrabajo");
					this.OnId_OrdeTrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Tecnologia", DbType="Int NOT NULL")]
		public int Id_Tecnologia
		{
			get
			{
				return this._Id_Tecnologia;
			}
			set
			{
				if ((this._Id_Tecnologia != value))
				{
					if (this._Tecnologia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_TecnologiaChanging(value);
					this.SendPropertyChanging();
					this._Id_Tecnologia = value;
					this.SendPropertyChanged("Id_Tecnologia");
					this.OnId_TecnologiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ClienteFinal", DbType="Int NOT NULL")]
		public int Id_ClienteFinal
		{
			get
			{
				return this._Id_ClienteFinal;
			}
			set
			{
				if ((this._Id_ClienteFinal != value))
				{
					if (this._ClienteFinal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ClienteFinalChanging(value);
					this.SendPropertyChanging();
					this._Id_ClienteFinal = value;
					this.SendPropertyChanged("Id_ClienteFinal");
					this.OnId_ClienteFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Usuario", DbType="Int NOT NULL")]
		public int Id_Usuario
		{
			get
			{
				return this._Id_Usuario;
			}
			set
			{
				if ((this._Id_Usuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._Id_Usuario = value;
					this.SendPropertyChanged("Id_Usuario");
					this.OnId_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_TipoTrabajo", DbType="Int NOT NULL")]
		public int Id_TipoTrabajo
		{
			get
			{
				return this._Id_TipoTrabajo;
			}
			set
			{
				if ((this._Id_TipoTrabajo != value))
				{
					if (this._TipoTrabajo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_TipoTrabajoChanging(value);
					this.SendPropertyChanging();
					this._Id_TipoTrabajo = value;
					this.SendPropertyChanged("Id_TipoTrabajo");
					this.OnId_TipoTrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT_FechaSolicitud", DbType="DateTime")]
		public System.Nullable<System.DateTime> OT_FechaSolicitud
		{
			get
			{
				return this._OT_FechaSolicitud;
			}
			set
			{
				if ((this._OT_FechaSolicitud != value))
				{
					this.OnOT_FechaSolicitudChanging(value);
					this.SendPropertyChanging();
					this._OT_FechaSolicitud = value;
					this.SendPropertyChanged("OT_FechaSolicitud");
					this.OnOT_FechaSolicitudChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT_FechaCierre", DbType="DateTime")]
		public System.Nullable<System.DateTime> OT_FechaCierre
		{
			get
			{
				return this._OT_FechaCierre;
			}
			set
			{
				if ((this._OT_FechaCierre != value))
				{
					this.OnOT_FechaCierreChanging(value);
					this.SendPropertyChanging();
					this._OT_FechaCierre = value;
					this.SendPropertyChanged("OT_FechaCierre");
					this.OnOT_FechaCierreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT_DescripcionOT", DbType="VarChar(200)")]
		public string OT_DescripcionOT
		{
			get
			{
				return this._OT_DescripcionOT;
			}
			set
			{
				if ((this._OT_DescripcionOT != value))
				{
					this.OnOT_DescripcionOTChanging(value);
					this.SendPropertyChanging();
					this._OT_DescripcionOT = value;
					this.SendPropertyChanged("OT_DescripcionOT");
					this.OnOT_DescripcionOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT_TicketCliente", DbType="VarChar(20)")]
		public string OT_TicketCliente
		{
			get
			{
				return this._OT_TicketCliente;
			}
			set
			{
				if ((this._OT_TicketCliente != value))
				{
					this.OnOT_TicketClienteChanging(value);
					this.SendPropertyChanging();
					this._OT_TicketCliente = value;
					this.SendPropertyChanged("OT_TicketCliente");
					this.OnOT_TicketClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT_NombreNodo", DbType="VarChar(50)")]
		public string OT_NombreNodo
		{
			get
			{
				return this._OT_NombreNodo;
			}
			set
			{
				if ((this._OT_NombreNodo != value))
				{
					this.OnOT_NombreNodoChanging(value);
					this.SendPropertyChanging();
					this._OT_NombreNodo = value;
					this.SendPropertyChanged("OT_NombreNodo");
					this.OnOT_NombreNodoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT_Estado", DbType="Char(50)")]
		public string OT_Estado
		{
			get
			{
				return this._OT_Estado;
			}
			set
			{
				if ((this._OT_Estado != value))
				{
					this.OnOT_EstadoChanging(value);
					this.SendPropertyChanging();
					this._OT_Estado = value;
					this.SendPropertyChanged("OT_Estado");
					this.OnOT_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrdenTrabajo_DetalleOT", Storage="_DetalleOT", ThisKey="Id_OrdeTrabajo", OtherKey="Id_OrdeTrabajo")]
		public EntitySet<DetalleOT> DetalleOT
		{
			get
			{
				return this._DetalleOT;
			}
			set
			{
				this._DetalleOT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClienteFinal_OrdenTrabajo", Storage="_ClienteFinal", ThisKey="Id_ClienteFinal", OtherKey="Id_ClienteFinal", IsForeignKey=true)]
		public ClienteFinal ClienteFinal
		{
			get
			{
				return this._ClienteFinal.Entity;
			}
			set
			{
				ClienteFinal previousValue = this._ClienteFinal.Entity;
				if (((previousValue != value) 
							|| (this._ClienteFinal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClienteFinal.Entity = null;
						previousValue.OrdenTrabajo.Remove(this);
					}
					this._ClienteFinal.Entity = value;
					if ((value != null))
					{
						value.OrdenTrabajo.Add(this);
						this._Id_ClienteFinal = value.Id_ClienteFinal;
					}
					else
					{
						this._Id_ClienteFinal = default(int);
					}
					this.SendPropertyChanged("ClienteFinal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tecnologia_OrdenTrabajo", Storage="_Tecnologia", ThisKey="Id_Tecnologia", OtherKey="Id_Tecnologia", IsForeignKey=true)]
		public Tecnologia Tecnologia
		{
			get
			{
				return this._Tecnologia.Entity;
			}
			set
			{
				Tecnologia previousValue = this._Tecnologia.Entity;
				if (((previousValue != value) 
							|| (this._Tecnologia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tecnologia.Entity = null;
						previousValue.OrdenTrabajo.Remove(this);
					}
					this._Tecnologia.Entity = value;
					if ((value != null))
					{
						value.OrdenTrabajo.Add(this);
						this._Id_Tecnologia = value.Id_Tecnologia;
					}
					else
					{
						this._Id_Tecnologia = default(int);
					}
					this.SendPropertyChanged("Tecnologia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoTrabajo_OrdenTrabajo", Storage="_TipoTrabajo", ThisKey="Id_TipoTrabajo", OtherKey="Id_TipoTrabajo", IsForeignKey=true)]
		public TipoTrabajo TipoTrabajo
		{
			get
			{
				return this._TipoTrabajo.Entity;
			}
			set
			{
				TipoTrabajo previousValue = this._TipoTrabajo.Entity;
				if (((previousValue != value) 
							|| (this._TipoTrabajo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoTrabajo.Entity = null;
						previousValue.OrdenTrabajo.Remove(this);
					}
					this._TipoTrabajo.Entity = value;
					if ((value != null))
					{
						value.OrdenTrabajo.Add(this);
						this._Id_TipoTrabajo = value.Id_TipoTrabajo;
					}
					else
					{
						this._Id_TipoTrabajo = default(int);
					}
					this.SendPropertyChanged("TipoTrabajo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_OrdenTrabajo", Storage="_Usuario", ThisKey="Id_Usuario", OtherKey="Id_Usuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.OrdenTrabajo.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.OrdenTrabajo.Add(this);
						this._Id_Usuario = value.Id_Usuario;
					}
					else
					{
						this._Id_Usuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleOT(DetalleOT entity)
		{
			this.SendPropertyChanging();
			entity.OrdenTrabajo = this;
		}
		
		private void detach_DetalleOT(DetalleOT entity)
		{
			this.SendPropertyChanging();
			entity.OrdenTrabajo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pais")]
	public partial class Pais : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Pais;
		
		private string _Pai_Nombre;
		
		private System.Nullable<char> _Pai_Estado;
		
		private EntitySet<Provincia> _Provincia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_PaisChanging(int value);
    partial void OnId_PaisChanged();
    partial void OnPai_NombreChanging(string value);
    partial void OnPai_NombreChanged();
    partial void OnPai_EstadoChanging(System.Nullable<char> value);
    partial void OnPai_EstadoChanged();
    #endregion
		
		public Pais()
		{
			this._Provincia = new EntitySet<Provincia>(new Action<Provincia>(this.attach_Provincia), new Action<Provincia>(this.detach_Provincia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Pais", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Pais
		{
			get
			{
				return this._Id_Pais;
			}
			set
			{
				if ((this._Id_Pais != value))
				{
					this.OnId_PaisChanging(value);
					this.SendPropertyChanging();
					this._Id_Pais = value;
					this.SendPropertyChanged("Id_Pais");
					this.OnId_PaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pai_Nombre", DbType="VarChar(100)")]
		public string Pai_Nombre
		{
			get
			{
				return this._Pai_Nombre;
			}
			set
			{
				if ((this._Pai_Nombre != value))
				{
					this.OnPai_NombreChanging(value);
					this.SendPropertyChanging();
					this._Pai_Nombre = value;
					this.SendPropertyChanged("Pai_Nombre");
					this.OnPai_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pai_Estado", DbType="Char(1)")]
		public System.Nullable<char> Pai_Estado
		{
			get
			{
				return this._Pai_Estado;
			}
			set
			{
				if ((this._Pai_Estado != value))
				{
					this.OnPai_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Pai_Estado = value;
					this.SendPropertyChanged("Pai_Estado");
					this.OnPai_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_Provincia", Storage="_Provincia", ThisKey="Id_Pais", OtherKey="Id_Pais")]
		public EntitySet<Provincia> Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				this._Provincia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Provincia(Provincia entity)
		{
			this.SendPropertyChanging();
			entity.Pais = this;
		}
		
		private void detach_Provincia(Provincia entity)
		{
			this.SendPropertyChanging();
			entity.Pais = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Perfil")]
	public partial class Perfil : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Perfil;
		
		private string _Per_Nombre;
		
		private string _Per_Descripcion;
		
		private System.Nullable<char> _Per_Estado;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_PerfilChanging(int value);
    partial void OnId_PerfilChanged();
    partial void OnPer_NombreChanging(string value);
    partial void OnPer_NombreChanged();
    partial void OnPer_DescripcionChanging(string value);
    partial void OnPer_DescripcionChanged();
    partial void OnPer_EstadoChanging(System.Nullable<char> value);
    partial void OnPer_EstadoChanged();
    #endregion
		
		public Perfil()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Perfil", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Perfil
		{
			get
			{
				return this._Id_Perfil;
			}
			set
			{
				if ((this._Id_Perfil != value))
				{
					this.OnId_PerfilChanging(value);
					this.SendPropertyChanging();
					this._Id_Perfil = value;
					this.SendPropertyChanged("Id_Perfil");
					this.OnId_PerfilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Per_Nombre", DbType="VarChar(50)")]
		public string Per_Nombre
		{
			get
			{
				return this._Per_Nombre;
			}
			set
			{
				if ((this._Per_Nombre != value))
				{
					this.OnPer_NombreChanging(value);
					this.SendPropertyChanging();
					this._Per_Nombre = value;
					this.SendPropertyChanged("Per_Nombre");
					this.OnPer_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Per_Descripcion", DbType="VarChar(100)")]
		public string Per_Descripcion
		{
			get
			{
				return this._Per_Descripcion;
			}
			set
			{
				if ((this._Per_Descripcion != value))
				{
					this.OnPer_DescripcionChanging(value);
					this.SendPropertyChanging();
					this._Per_Descripcion = value;
					this.SendPropertyChanged("Per_Descripcion");
					this.OnPer_DescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Per_Estado", DbType="Char(1)")]
		public System.Nullable<char> Per_Estado
		{
			get
			{
				return this._Per_Estado;
			}
			set
			{
				if ((this._Per_Estado != value))
				{
					this.OnPer_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Per_Estado = value;
					this.SendPropertyChanged("Per_Estado");
					this.OnPer_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Perfil_Usuario", Storage="_Usuario", ThisKey="Id_Perfil", OtherKey="Id_Perfil")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Perfil = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Perfil = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Provincia")]
	public partial class Provincia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Provincia;
		
		private string _Prov_Nombre;
		
		private System.Nullable<char> _Prov_Estado;
		
		private int _Id_Pais;
		
		private EntitySet<Ciudad> _Ciudad;
		
		private EntityRef<Pais> _Pais;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ProvinciaChanging(int value);
    partial void OnId_ProvinciaChanged();
    partial void OnProv_NombreChanging(string value);
    partial void OnProv_NombreChanged();
    partial void OnProv_EstadoChanging(System.Nullable<char> value);
    partial void OnProv_EstadoChanged();
    partial void OnId_PaisChanging(int value);
    partial void OnId_PaisChanged();
    #endregion
		
		public Provincia()
		{
			this._Ciudad = new EntitySet<Ciudad>(new Action<Ciudad>(this.attach_Ciudad), new Action<Ciudad>(this.detach_Ciudad));
			this._Pais = default(EntityRef<Pais>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Provincia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Provincia
		{
			get
			{
				return this._Id_Provincia;
			}
			set
			{
				if ((this._Id_Provincia != value))
				{
					this.OnId_ProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Id_Provincia = value;
					this.SendPropertyChanged("Id_Provincia");
					this.OnId_ProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prov_Nombre", DbType="VarChar(100)")]
		public string Prov_Nombre
		{
			get
			{
				return this._Prov_Nombre;
			}
			set
			{
				if ((this._Prov_Nombre != value))
				{
					this.OnProv_NombreChanging(value);
					this.SendPropertyChanging();
					this._Prov_Nombre = value;
					this.SendPropertyChanged("Prov_Nombre");
					this.OnProv_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prov_Estado", DbType="Char(1)")]
		public System.Nullable<char> Prov_Estado
		{
			get
			{
				return this._Prov_Estado;
			}
			set
			{
				if ((this._Prov_Estado != value))
				{
					this.OnProv_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Prov_Estado = value;
					this.SendPropertyChanged("Prov_Estado");
					this.OnProv_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Pais", DbType="Int NOT NULL")]
		public int Id_Pais
		{
			get
			{
				return this._Id_Pais;
			}
			set
			{
				if ((this._Id_Pais != value))
				{
					if (this._Pais.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PaisChanging(value);
					this.SendPropertyChanging();
					this._Id_Pais = value;
					this.SendPropertyChanged("Id_Pais");
					this.OnId_PaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincia_Ciudad", Storage="_Ciudad", ThisKey="Id_Provincia", OtherKey="Id_Provincia")]
		public EntitySet<Ciudad> Ciudad
		{
			get
			{
				return this._Ciudad;
			}
			set
			{
				this._Ciudad.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_Provincia", Storage="_Pais", ThisKey="Id_Pais", OtherKey="Id_Pais", IsForeignKey=true)]
		public Pais Pais
		{
			get
			{
				return this._Pais.Entity;
			}
			set
			{
				Pais previousValue = this._Pais.Entity;
				if (((previousValue != value) 
							|| (this._Pais.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pais.Entity = null;
						previousValue.Provincia.Remove(this);
					}
					this._Pais.Entity = value;
					if ((value != null))
					{
						value.Provincia.Add(this);
						this._Id_Pais = value.Id_Pais;
					}
					else
					{
						this._Id_Pais = default(int);
					}
					this.SendPropertyChanged("Pais");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ciudad(Ciudad entity)
		{
			this.SendPropertyChanging();
			entity.Provincia = this;
		}
		
		private void detach_Ciudad(Ciudad entity)
		{
			this.SendPropertyChanging();
			entity.Provincia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tecnologia")]
	public partial class Tecnologia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Tecnologia;
		
		private string _Tec_Nombre;
		
		private string _Tec_Descripcion;
		
		private System.Nullable<char> _Tec_Estado;
		
		private int _Id_TipoCategoria;
		
		private int _Id_Operadora;
		
		private EntitySet<BodegaMateriales> _BodegaMateriales;
		
		private EntitySet<OrdenTrabajo> _OrdenTrabajo;
		
		private EntityRef<Operadora> _Operadora;
		
		private EntityRef<Tipo_Categoria> _Tipo_Categoria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_TecnologiaChanging(int value);
    partial void OnId_TecnologiaChanged();
    partial void OnTec_NombreChanging(string value);
    partial void OnTec_NombreChanged();
    partial void OnTec_DescripcionChanging(string value);
    partial void OnTec_DescripcionChanged();
    partial void OnTec_EstadoChanging(System.Nullable<char> value);
    partial void OnTec_EstadoChanged();
    partial void OnId_TipoCategoriaChanging(int value);
    partial void OnId_TipoCategoriaChanged();
    partial void OnId_OperadoraChanging(int value);
    partial void OnId_OperadoraChanged();
    #endregion
		
		public Tecnologia()
		{
			this._BodegaMateriales = new EntitySet<BodegaMateriales>(new Action<BodegaMateriales>(this.attach_BodegaMateriales), new Action<BodegaMateriales>(this.detach_BodegaMateriales));
			this._OrdenTrabajo = new EntitySet<OrdenTrabajo>(new Action<OrdenTrabajo>(this.attach_OrdenTrabajo), new Action<OrdenTrabajo>(this.detach_OrdenTrabajo));
			this._Operadora = default(EntityRef<Operadora>);
			this._Tipo_Categoria = default(EntityRef<Tipo_Categoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Tecnologia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Tecnologia
		{
			get
			{
				return this._Id_Tecnologia;
			}
			set
			{
				if ((this._Id_Tecnologia != value))
				{
					this.OnId_TecnologiaChanging(value);
					this.SendPropertyChanging();
					this._Id_Tecnologia = value;
					this.SendPropertyChanged("Id_Tecnologia");
					this.OnId_TecnologiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tec_Nombre", DbType="VarChar(50)")]
		public string Tec_Nombre
		{
			get
			{
				return this._Tec_Nombre;
			}
			set
			{
				if ((this._Tec_Nombre != value))
				{
					this.OnTec_NombreChanging(value);
					this.SendPropertyChanging();
					this._Tec_Nombre = value;
					this.SendPropertyChanged("Tec_Nombre");
					this.OnTec_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tec_Descripcion", DbType="VarChar(100)")]
		public string Tec_Descripcion
		{
			get
			{
				return this._Tec_Descripcion;
			}
			set
			{
				if ((this._Tec_Descripcion != value))
				{
					this.OnTec_DescripcionChanging(value);
					this.SendPropertyChanging();
					this._Tec_Descripcion = value;
					this.SendPropertyChanged("Tec_Descripcion");
					this.OnTec_DescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tec_Estado", DbType="Char(1)")]
		public System.Nullable<char> Tec_Estado
		{
			get
			{
				return this._Tec_Estado;
			}
			set
			{
				if ((this._Tec_Estado != value))
				{
					this.OnTec_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Tec_Estado = value;
					this.SendPropertyChanged("Tec_Estado");
					this.OnTec_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_TipoCategoria", DbType="Int NOT NULL")]
		public int Id_TipoCategoria
		{
			get
			{
				return this._Id_TipoCategoria;
			}
			set
			{
				if ((this._Id_TipoCategoria != value))
				{
					if (this._Tipo_Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_TipoCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Id_TipoCategoria = value;
					this.SendPropertyChanged("Id_TipoCategoria");
					this.OnId_TipoCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Operadora", DbType="Int NOT NULL")]
		public int Id_Operadora
		{
			get
			{
				return this._Id_Operadora;
			}
			set
			{
				if ((this._Id_Operadora != value))
				{
					if (this._Operadora.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_OperadoraChanging(value);
					this.SendPropertyChanging();
					this._Id_Operadora = value;
					this.SendPropertyChanged("Id_Operadora");
					this.OnId_OperadoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tecnologia_BodegaMateriales", Storage="_BodegaMateriales", ThisKey="Id_Tecnologia", OtherKey="Id_Tecnologia")]
		public EntitySet<BodegaMateriales> BodegaMateriales
		{
			get
			{
				return this._BodegaMateriales;
			}
			set
			{
				this._BodegaMateriales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tecnologia_OrdenTrabajo", Storage="_OrdenTrabajo", ThisKey="Id_Tecnologia", OtherKey="Id_Tecnologia")]
		public EntitySet<OrdenTrabajo> OrdenTrabajo
		{
			get
			{
				return this._OrdenTrabajo;
			}
			set
			{
				this._OrdenTrabajo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operadora_Tecnologia", Storage="_Operadora", ThisKey="Id_Operadora", OtherKey="Id_Operadora", IsForeignKey=true)]
		public Operadora Operadora
		{
			get
			{
				return this._Operadora.Entity;
			}
			set
			{
				Operadora previousValue = this._Operadora.Entity;
				if (((previousValue != value) 
							|| (this._Operadora.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Operadora.Entity = null;
						previousValue.Tecnologia.Remove(this);
					}
					this._Operadora.Entity = value;
					if ((value != null))
					{
						value.Tecnologia.Add(this);
						this._Id_Operadora = value.Id_Operadora;
					}
					else
					{
						this._Id_Operadora = default(int);
					}
					this.SendPropertyChanged("Operadora");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Categoria_Tecnologia", Storage="_Tipo_Categoria", ThisKey="Id_TipoCategoria", OtherKey="Id_TipoCategoria", IsForeignKey=true)]
		public Tipo_Categoria Tipo_Categoria
		{
			get
			{
				return this._Tipo_Categoria.Entity;
			}
			set
			{
				Tipo_Categoria previousValue = this._Tipo_Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Categoria.Entity = null;
						previousValue.Tecnologia.Remove(this);
					}
					this._Tipo_Categoria.Entity = value;
					if ((value != null))
					{
						value.Tecnologia.Add(this);
						this._Id_TipoCategoria = value.Id_TipoCategoria;
					}
					else
					{
						this._Id_TipoCategoria = default(int);
					}
					this.SendPropertyChanged("Tipo_Categoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BodegaMateriales(BodegaMateriales entity)
		{
			this.SendPropertyChanging();
			entity.Tecnologia = this;
		}
		
		private void detach_BodegaMateriales(BodegaMateriales entity)
		{
			this.SendPropertyChanging();
			entity.Tecnologia = null;
		}
		
		private void attach_OrdenTrabajo(OrdenTrabajo entity)
		{
			this.SendPropertyChanging();
			entity.Tecnologia = this;
		}
		
		private void detach_OrdenTrabajo(OrdenTrabajo entity)
		{
			this.SendPropertyChanging();
			entity.Tecnologia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_Categoria")]
	public partial class Tipo_Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_TipoCategoria;
		
		private string _Tip_Numero;
		
		private System.Nullable<char> _Tip_Estado;
		
		private EntitySet<Tecnologia> _Tecnologia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_TipoCategoriaChanging(int value);
    partial void OnId_TipoCategoriaChanged();
    partial void OnTip_NumeroChanging(string value);
    partial void OnTip_NumeroChanged();
    partial void OnTip_EstadoChanging(System.Nullable<char> value);
    partial void OnTip_EstadoChanged();
    #endregion
		
		public Tipo_Categoria()
		{
			this._Tecnologia = new EntitySet<Tecnologia>(new Action<Tecnologia>(this.attach_Tecnologia), new Action<Tecnologia>(this.detach_Tecnologia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_TipoCategoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_TipoCategoria
		{
			get
			{
				return this._Id_TipoCategoria;
			}
			set
			{
				if ((this._Id_TipoCategoria != value))
				{
					this.OnId_TipoCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Id_TipoCategoria = value;
					this.SendPropertyChanged("Id_TipoCategoria");
					this.OnId_TipoCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tip_Numero", DbType="VarChar(10)")]
		public string Tip_Numero
		{
			get
			{
				return this._Tip_Numero;
			}
			set
			{
				if ((this._Tip_Numero != value))
				{
					this.OnTip_NumeroChanging(value);
					this.SendPropertyChanging();
					this._Tip_Numero = value;
					this.SendPropertyChanged("Tip_Numero");
					this.OnTip_NumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tip_Estado", DbType="Char(1)")]
		public System.Nullable<char> Tip_Estado
		{
			get
			{
				return this._Tip_Estado;
			}
			set
			{
				if ((this._Tip_Estado != value))
				{
					this.OnTip_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Tip_Estado = value;
					this.SendPropertyChanged("Tip_Estado");
					this.OnTip_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Categoria_Tecnologia", Storage="_Tecnologia", ThisKey="Id_TipoCategoria", OtherKey="Id_TipoCategoria")]
		public EntitySet<Tecnologia> Tecnologia
		{
			get
			{
				return this._Tecnologia;
			}
			set
			{
				this._Tecnologia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tecnologia(Tecnologia entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Categoria = this;
		}
		
		private void detach_Tecnologia(Tecnologia entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoMaterial")]
	public partial class TipoMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_TipoMaterial;
		
		private string _TMat_Nombre;
		
		private System.Nullable<char> _TMat_Estado;
		
		private EntitySet<Materiales> _Materiales;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_TipoMaterialChanging(int value);
    partial void OnId_TipoMaterialChanged();
    partial void OnTMat_NombreChanging(string value);
    partial void OnTMat_NombreChanged();
    partial void OnTMat_EstadoChanging(System.Nullable<char> value);
    partial void OnTMat_EstadoChanged();
    #endregion
		
		public TipoMaterial()
		{
			this._Materiales = new EntitySet<Materiales>(new Action<Materiales>(this.attach_Materiales), new Action<Materiales>(this.detach_Materiales));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_TipoMaterial", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_TipoMaterial
		{
			get
			{
				return this._Id_TipoMaterial;
			}
			set
			{
				if ((this._Id_TipoMaterial != value))
				{
					this.OnId_TipoMaterialChanging(value);
					this.SendPropertyChanging();
					this._Id_TipoMaterial = value;
					this.SendPropertyChanged("Id_TipoMaterial");
					this.OnId_TipoMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMat_Nombre", DbType="VarChar(50)")]
		public string TMat_Nombre
		{
			get
			{
				return this._TMat_Nombre;
			}
			set
			{
				if ((this._TMat_Nombre != value))
				{
					this.OnTMat_NombreChanging(value);
					this.SendPropertyChanging();
					this._TMat_Nombre = value;
					this.SendPropertyChanged("TMat_Nombre");
					this.OnTMat_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMat_Estado", DbType="Char(1)")]
		public System.Nullable<char> TMat_Estado
		{
			get
			{
				return this._TMat_Estado;
			}
			set
			{
				if ((this._TMat_Estado != value))
				{
					this.OnTMat_EstadoChanging(value);
					this.SendPropertyChanging();
					this._TMat_Estado = value;
					this.SendPropertyChanged("TMat_Estado");
					this.OnTMat_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoMaterial_Materiales", Storage="_Materiales", ThisKey="Id_TipoMaterial", OtherKey="Id_TipoMaterial")]
		public EntitySet<Materiales> Materiales
		{
			get
			{
				return this._Materiales;
			}
			set
			{
				this._Materiales.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Materiales(Materiales entity)
		{
			this.SendPropertyChanging();
			entity.TipoMaterial = this;
		}
		
		private void detach_Materiales(Materiales entity)
		{
			this.SendPropertyChanging();
			entity.TipoMaterial = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoTrabajo")]
	public partial class TipoTrabajo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_TipoTrabajo;
		
		private string _Ttrab_Nombre;
		
		private System.Nullable<char> _Ttrab_Estado;
		
		private EntitySet<OrdenTrabajo> _OrdenTrabajo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_TipoTrabajoChanging(int value);
    partial void OnId_TipoTrabajoChanged();
    partial void OnTtrab_NombreChanging(string value);
    partial void OnTtrab_NombreChanged();
    partial void OnTtrab_EstadoChanging(System.Nullable<char> value);
    partial void OnTtrab_EstadoChanged();
    #endregion
		
		public TipoTrabajo()
		{
			this._OrdenTrabajo = new EntitySet<OrdenTrabajo>(new Action<OrdenTrabajo>(this.attach_OrdenTrabajo), new Action<OrdenTrabajo>(this.detach_OrdenTrabajo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_TipoTrabajo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_TipoTrabajo
		{
			get
			{
				return this._Id_TipoTrabajo;
			}
			set
			{
				if ((this._Id_TipoTrabajo != value))
				{
					this.OnId_TipoTrabajoChanging(value);
					this.SendPropertyChanging();
					this._Id_TipoTrabajo = value;
					this.SendPropertyChanged("Id_TipoTrabajo");
					this.OnId_TipoTrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ttrab_Nombre", DbType="VarChar(50)")]
		public string Ttrab_Nombre
		{
			get
			{
				return this._Ttrab_Nombre;
			}
			set
			{
				if ((this._Ttrab_Nombre != value))
				{
					this.OnTtrab_NombreChanging(value);
					this.SendPropertyChanging();
					this._Ttrab_Nombre = value;
					this.SendPropertyChanged("Ttrab_Nombre");
					this.OnTtrab_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ttrab_Estado", DbType="Char(1)")]
		public System.Nullable<char> Ttrab_Estado
		{
			get
			{
				return this._Ttrab_Estado;
			}
			set
			{
				if ((this._Ttrab_Estado != value))
				{
					this.OnTtrab_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Ttrab_Estado = value;
					this.SendPropertyChanged("Ttrab_Estado");
					this.OnTtrab_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoTrabajo_OrdenTrabajo", Storage="_OrdenTrabajo", ThisKey="Id_TipoTrabajo", OtherKey="Id_TipoTrabajo")]
		public EntitySet<OrdenTrabajo> OrdenTrabajo
		{
			get
			{
				return this._OrdenTrabajo;
			}
			set
			{
				this._OrdenTrabajo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrdenTrabajo(OrdenTrabajo entity)
		{
			this.SendPropertyChanging();
			entity.TipoTrabajo = this;
		}
		
		private void detach_OrdenTrabajo(OrdenTrabajo entity)
		{
			this.SendPropertyChanging();
			entity.TipoTrabajo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserActivation")]
	public partial class UserActivation
	{
		
		private int _UserId;
		
		private System.Guid _ActivationCode;
		
		public UserActivation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationCode", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ActivationCode
		{
			get
			{
				return this._ActivationCode;
			}
			set
			{
				if ((this._ActivationCode != value))
				{
					this._ActivationCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Usuario;
		
		private string _Usu_Cedula;
		
		private string _Usu_Apellido;
		
		private string _Usu_Nombre;
		
		private string _Usu_Direccion;
		
		private string _Usu_Correo;
		
		private string _Usu_Telefono;
		
		private System.Nullable<System.DateTime> _Usu_FechaCreacion;
		
		private string _Usu_Username;
		
		private string _Usu_Clave;
		
		private System.Nullable<char> _Usu_Estado;
		
		private int _Id_Perfil;
		
		private System.Nullable<System.DateTime> _Usu_LastLoginDate;
		
		private EntitySet<DetalleOT_Usuarios> _DetalleOT_Usuarios;
		
		private EntitySet<OrdenTrabajo> _OrdenTrabajo;
		
		private EntityRef<Perfil> _Perfil;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_UsuarioChanging(int value);
    partial void OnId_UsuarioChanged();
    partial void OnUsu_CedulaChanging(string value);
    partial void OnUsu_CedulaChanged();
    partial void OnUsu_ApellidoChanging(string value);
    partial void OnUsu_ApellidoChanged();
    partial void OnUsu_NombreChanging(string value);
    partial void OnUsu_NombreChanged();
    partial void OnUsu_DireccionChanging(string value);
    partial void OnUsu_DireccionChanged();
    partial void OnUsu_CorreoChanging(string value);
    partial void OnUsu_CorreoChanged();
    partial void OnUsu_TelefonoChanging(string value);
    partial void OnUsu_TelefonoChanged();
    partial void OnUsu_FechaCreacionChanging(System.Nullable<System.DateTime> value);
    partial void OnUsu_FechaCreacionChanged();
    partial void OnUsu_UsernameChanging(string value);
    partial void OnUsu_UsernameChanged();
    partial void OnUsu_ClaveChanging(string value);
    partial void OnUsu_ClaveChanged();
    partial void OnUsu_EstadoChanging(System.Nullable<char> value);
    partial void OnUsu_EstadoChanged();
    partial void OnId_PerfilChanging(int value);
    partial void OnId_PerfilChanged();
    partial void OnUsu_LastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUsu_LastLoginDateChanged();
    #endregion
		
		public Usuario()
		{
			this._DetalleOT_Usuarios = new EntitySet<DetalleOT_Usuarios>(new Action<DetalleOT_Usuarios>(this.attach_DetalleOT_Usuarios), new Action<DetalleOT_Usuarios>(this.detach_DetalleOT_Usuarios));
			this._OrdenTrabajo = new EntitySet<OrdenTrabajo>(new Action<OrdenTrabajo>(this.attach_OrdenTrabajo), new Action<OrdenTrabajo>(this.detach_OrdenTrabajo));
			this._Perfil = default(EntityRef<Perfil>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Usuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Usuario
		{
			get
			{
				return this._Id_Usuario;
			}
			set
			{
				if ((this._Id_Usuario != value))
				{
					this.OnId_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._Id_Usuario = value;
					this.SendPropertyChanged("Id_Usuario");
					this.OnId_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usu_Cedula", DbType="VarChar(10)")]
		public string Usu_Cedula
		{
			get
			{
				return this._Usu_Cedula;
			}
			set
			{
				if ((this._Usu_Cedula != value))
				{
					this.OnUsu_CedulaChanging(value);
					this.SendPropertyChanging();
					this._Usu_Cedula = value;
					this.SendPropertyChanged("Usu_Cedula");
					this.OnUsu_CedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usu_Apellido", DbType="VarChar(100)")]
		public string Usu_Apellido
		{
			get
			{
				return this._Usu_Apellido;
			}
			set
			{
				if ((this._Usu_Apellido != value))
				{
					this.OnUsu_ApellidoChanging(value);
					this.SendPropertyChanging();
					this._Usu_Apellido = value;
					this.SendPropertyChanged("Usu_Apellido");
					this.OnUsu_ApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usu_Nombre", DbType="VarChar(100)")]
		public string Usu_Nombre
		{
			get
			{
				return this._Usu_Nombre;
			}
			set
			{
				if ((this._Usu_Nombre != value))
				{
					this.OnUsu_NombreChanging(value);
					this.SendPropertyChanging();
					this._Usu_Nombre = value;
					this.SendPropertyChanged("Usu_Nombre");
					this.OnUsu_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usu_Direccion", DbType="VarChar(100)")]
		public string Usu_Direccion
		{
			get
			{
				return this._Usu_Direccion;
			}
			set
			{
				if ((this._Usu_Direccion != value))
				{
					this.OnUsu_DireccionChanging(value);
					this.SendPropertyChanging();
					this._Usu_Direccion = value;
					this.SendPropertyChanged("Usu_Direccion");
					this.OnUsu_DireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usu_Correo", DbType="VarChar(100)")]
		public string Usu_Correo
		{
			get
			{
				return this._Usu_Correo;
			}
			set
			{
				if ((this._Usu_Correo != value))
				{
					this.OnUsu_CorreoChanging(value);
					this.SendPropertyChanging();
					this._Usu_Correo = value;
					this.SendPropertyChanged("Usu_Correo");
					this.OnUsu_CorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usu_Telefono", DbType="VarChar(10)")]
		public string Usu_Telefono
		{
			get
			{
				return this._Usu_Telefono;
			}
			set
			{
				if ((this._Usu_Telefono != value))
				{
					this.OnUsu_TelefonoChanging(value);
					this.SendPropertyChanging();
					this._Usu_Telefono = value;
					this.SendPropertyChanged("Usu_Telefono");
					this.OnUsu_TelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usu_FechaCreacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> Usu_FechaCreacion
		{
			get
			{
				return this._Usu_FechaCreacion;
			}
			set
			{
				if ((this._Usu_FechaCreacion != value))
				{
					this.OnUsu_FechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._Usu_FechaCreacion = value;
					this.SendPropertyChanged("Usu_FechaCreacion");
					this.OnUsu_FechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usu_Username", DbType="VarChar(50)")]
		public string Usu_Username
		{
			get
			{
				return this._Usu_Username;
			}
			set
			{
				if ((this._Usu_Username != value))
				{
					this.OnUsu_UsernameChanging(value);
					this.SendPropertyChanging();
					this._Usu_Username = value;
					this.SendPropertyChanged("Usu_Username");
					this.OnUsu_UsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usu_Clave", DbType="VarChar(50)")]
		public string Usu_Clave
		{
			get
			{
				return this._Usu_Clave;
			}
			set
			{
				if ((this._Usu_Clave != value))
				{
					this.OnUsu_ClaveChanging(value);
					this.SendPropertyChanging();
					this._Usu_Clave = value;
					this.SendPropertyChanged("Usu_Clave");
					this.OnUsu_ClaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usu_Estado", DbType="Char(1)")]
		public System.Nullable<char> Usu_Estado
		{
			get
			{
				return this._Usu_Estado;
			}
			set
			{
				if ((this._Usu_Estado != value))
				{
					this.OnUsu_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Usu_Estado = value;
					this.SendPropertyChanged("Usu_Estado");
					this.OnUsu_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Perfil", DbType="Int NOT NULL")]
		public int Id_Perfil
		{
			get
			{
				return this._Id_Perfil;
			}
			set
			{
				if ((this._Id_Perfil != value))
				{
					if (this._Perfil.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PerfilChanging(value);
					this.SendPropertyChanging();
					this._Id_Perfil = value;
					this.SendPropertyChanged("Id_Perfil");
					this.OnId_PerfilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usu_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Usu_LastLoginDate
		{
			get
			{
				return this._Usu_LastLoginDate;
			}
			set
			{
				if ((this._Usu_LastLoginDate != value))
				{
					this.OnUsu_LastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._Usu_LastLoginDate = value;
					this.SendPropertyChanged("Usu_LastLoginDate");
					this.OnUsu_LastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_DetalleOT_Usuarios", Storage="_DetalleOT_Usuarios", ThisKey="Id_Usuario", OtherKey="Id_Usuario")]
		public EntitySet<DetalleOT_Usuarios> DetalleOT_Usuarios
		{
			get
			{
				return this._DetalleOT_Usuarios;
			}
			set
			{
				this._DetalleOT_Usuarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_OrdenTrabajo", Storage="_OrdenTrabajo", ThisKey="Id_Usuario", OtherKey="Id_Usuario")]
		public EntitySet<OrdenTrabajo> OrdenTrabajo
		{
			get
			{
				return this._OrdenTrabajo;
			}
			set
			{
				this._OrdenTrabajo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Perfil_Usuario", Storage="_Perfil", ThisKey="Id_Perfil", OtherKey="Id_Perfil", IsForeignKey=true)]
		public Perfil Perfil
		{
			get
			{
				return this._Perfil.Entity;
			}
			set
			{
				Perfil previousValue = this._Perfil.Entity;
				if (((previousValue != value) 
							|| (this._Perfil.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Perfil.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Perfil.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._Id_Perfil = value.Id_Perfil;
					}
					else
					{
						this._Id_Perfil = default(int);
					}
					this.SendPropertyChanged("Perfil");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleOT_Usuarios(DetalleOT_Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_DetalleOT_Usuarios(DetalleOT_Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_OrdenTrabajo(OrdenTrabajo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_OrdenTrabajo(OrdenTrabajo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacto")]
	public partial class Contacto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Contacto;
		
		private string _Cont_Nombre;
		
		private System.Nullable<char> _Cont_Estado;
		
		private int _Id_ClienteExterno;
		
		private EntityRef<ClienteExterno> _ClienteExterno;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ContactoChanging(int value);
    partial void OnId_ContactoChanged();
    partial void OnCont_NombreChanging(string value);
    partial void OnCont_NombreChanged();
    partial void OnCont_EstadoChanging(System.Nullable<char> value);
    partial void OnCont_EstadoChanged();
    partial void OnId_ClienteExternoChanging(int value);
    partial void OnId_ClienteExternoChanged();
    #endregion
		
		public Contacto()
		{
			this._ClienteExterno = default(EntityRef<ClienteExterno>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Contacto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Contacto
		{
			get
			{
				return this._Id_Contacto;
			}
			set
			{
				if ((this._Id_Contacto != value))
				{
					this.OnId_ContactoChanging(value);
					this.SendPropertyChanging();
					this._Id_Contacto = value;
					this.SendPropertyChanged("Id_Contacto");
					this.OnId_ContactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cont_Nombre", DbType="VarChar(50)")]
		public string Cont_Nombre
		{
			get
			{
				return this._Cont_Nombre;
			}
			set
			{
				if ((this._Cont_Nombre != value))
				{
					this.OnCont_NombreChanging(value);
					this.SendPropertyChanging();
					this._Cont_Nombre = value;
					this.SendPropertyChanged("Cont_Nombre");
					this.OnCont_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cont_Estado", DbType="Char(1)")]
		public System.Nullable<char> Cont_Estado
		{
			get
			{
				return this._Cont_Estado;
			}
			set
			{
				if ((this._Cont_Estado != value))
				{
					this.OnCont_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Cont_Estado = value;
					this.SendPropertyChanged("Cont_Estado");
					this.OnCont_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ClienteExterno", DbType="Int NOT NULL")]
		public int Id_ClienteExterno
		{
			get
			{
				return this._Id_ClienteExterno;
			}
			set
			{
				if ((this._Id_ClienteExterno != value))
				{
					if (this._ClienteExterno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ClienteExternoChanging(value);
					this.SendPropertyChanging();
					this._Id_ClienteExterno = value;
					this.SendPropertyChanged("Id_ClienteExterno");
					this.OnId_ClienteExternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClienteExterno_Contacto", Storage="_ClienteExterno", ThisKey="Id_ClienteExterno", OtherKey="Id_ClienteExterno", IsForeignKey=true)]
		public ClienteExterno ClienteExterno
		{
			get
			{
				return this._ClienteExterno.Entity;
			}
			set
			{
				ClienteExterno previousValue = this._ClienteExterno.Entity;
				if (((previousValue != value) 
							|| (this._ClienteExterno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClienteExterno.Entity = null;
						previousValue.Contacto.Remove(this);
					}
					this._ClienteExterno.Entity = value;
					if ((value != null))
					{
						value.Contacto.Add(this);
						this._Id_ClienteExterno = value.Id_ClienteExterno;
					}
					else
					{
						this._Id_ClienteExterno = default(int);
					}
					this.SendPropertyChanged("ClienteExterno");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClienteExterno")]
	public partial class ClienteExterno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_ClienteExterno;
		
		private string _CExt_Nombre;
		
		private string _CExt_Direccion;
		
		private string _CExt_Telefono;
		
		private System.Nullable<System.DateTime> _CExt_FechaCreacion;
		
		private System.Nullable<char> _CExt_Estado;
		
		private EntitySet<Clientes_Operadora> _Clientes_Operadora;
		
		private EntitySet<Contacto> _Contacto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ClienteExternoChanging(int value);
    partial void OnId_ClienteExternoChanged();
    partial void OnCExt_NombreChanging(string value);
    partial void OnCExt_NombreChanged();
    partial void OnCExt_DireccionChanging(string value);
    partial void OnCExt_DireccionChanged();
    partial void OnCExt_TelefonoChanging(string value);
    partial void OnCExt_TelefonoChanged();
    partial void OnCExt_FechaCreacionChanging(System.Nullable<System.DateTime> value);
    partial void OnCExt_FechaCreacionChanged();
    partial void OnCExt_EstadoChanging(System.Nullable<char> value);
    partial void OnCExt_EstadoChanged();
    #endregion
		
		public ClienteExterno()
		{
			this._Clientes_Operadora = new EntitySet<Clientes_Operadora>(new Action<Clientes_Operadora>(this.attach_Clientes_Operadora), new Action<Clientes_Operadora>(this.detach_Clientes_Operadora));
			this._Contacto = new EntitySet<Contacto>(new Action<Contacto>(this.attach_Contacto), new Action<Contacto>(this.detach_Contacto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ClienteExterno", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_ClienteExterno
		{
			get
			{
				return this._Id_ClienteExterno;
			}
			set
			{
				if ((this._Id_ClienteExterno != value))
				{
					this.OnId_ClienteExternoChanging(value);
					this.SendPropertyChanging();
					this._Id_ClienteExterno = value;
					this.SendPropertyChanged("Id_ClienteExterno");
					this.OnId_ClienteExternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CExt_Nombre", DbType="VarChar(50)")]
		public string CExt_Nombre
		{
			get
			{
				return this._CExt_Nombre;
			}
			set
			{
				if ((this._CExt_Nombre != value))
				{
					this.OnCExt_NombreChanging(value);
					this.SendPropertyChanging();
					this._CExt_Nombre = value;
					this.SendPropertyChanged("CExt_Nombre");
					this.OnCExt_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CExt_Direccion", DbType="VarChar(50)")]
		public string CExt_Direccion
		{
			get
			{
				return this._CExt_Direccion;
			}
			set
			{
				if ((this._CExt_Direccion != value))
				{
					this.OnCExt_DireccionChanging(value);
					this.SendPropertyChanging();
					this._CExt_Direccion = value;
					this.SendPropertyChanged("CExt_Direccion");
					this.OnCExt_DireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CExt_Telefono", DbType="VarChar(10)")]
		public string CExt_Telefono
		{
			get
			{
				return this._CExt_Telefono;
			}
			set
			{
				if ((this._CExt_Telefono != value))
				{
					this.OnCExt_TelefonoChanging(value);
					this.SendPropertyChanging();
					this._CExt_Telefono = value;
					this.SendPropertyChanged("CExt_Telefono");
					this.OnCExt_TelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CExt_FechaCreacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> CExt_FechaCreacion
		{
			get
			{
				return this._CExt_FechaCreacion;
			}
			set
			{
				if ((this._CExt_FechaCreacion != value))
				{
					this.OnCExt_FechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._CExt_FechaCreacion = value;
					this.SendPropertyChanged("CExt_FechaCreacion");
					this.OnCExt_FechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CExt_Estado", DbType="Char(1)")]
		public System.Nullable<char> CExt_Estado
		{
			get
			{
				return this._CExt_Estado;
			}
			set
			{
				if ((this._CExt_Estado != value))
				{
					this.OnCExt_EstadoChanging(value);
					this.SendPropertyChanging();
					this._CExt_Estado = value;
					this.SendPropertyChanged("CExt_Estado");
					this.OnCExt_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClienteExterno_Clientes_Operadora", Storage="_Clientes_Operadora", ThisKey="Id_ClienteExterno", OtherKey="Id_ClienteExterno")]
		public EntitySet<Clientes_Operadora> Clientes_Operadora
		{
			get
			{
				return this._Clientes_Operadora;
			}
			set
			{
				this._Clientes_Operadora.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClienteExterno_Contacto", Storage="_Contacto", ThisKey="Id_ClienteExterno", OtherKey="Id_ClienteExterno")]
		public EntitySet<Contacto> Contacto
		{
			get
			{
				return this._Contacto;
			}
			set
			{
				this._Contacto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes_Operadora(Clientes_Operadora entity)
		{
			this.SendPropertyChanging();
			entity.ClienteExterno = this;
		}
		
		private void detach_Clientes_Operadora(Clientes_Operadora entity)
		{
			this.SendPropertyChanging();
			entity.ClienteExterno = null;
		}
		
		private void attach_Contacto(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.ClienteExterno = this;
		}
		
		private void detach_Contacto(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.ClienteExterno = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_sucursales")]
	public partial class View_sucursales
	{
		
		private int _Id_ClientesCiudad;
		
		private string _Cli_Nombre;
		
		private string _CCiu_NombreSucursal;
		
		private string _CCiu_Direccion;
		
		private string _Ciu_Nombre;
		
		private int _Id_ClienteFinal;
		
		public View_sucursales()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ClientesCiudad", DbType="Int NOT NULL")]
		public int Id_ClientesCiudad
		{
			get
			{
				return this._Id_ClientesCiudad;
			}
			set
			{
				if ((this._Id_ClientesCiudad != value))
				{
					this._Id_ClientesCiudad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cli_Nombre", DbType="VarChar(50)")]
		public string Cli_Nombre
		{
			get
			{
				return this._Cli_Nombre;
			}
			set
			{
				if ((this._Cli_Nombre != value))
				{
					this._Cli_Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCiu_NombreSucursal", DbType="VarChar(100)")]
		public string CCiu_NombreSucursal
		{
			get
			{
				return this._CCiu_NombreSucursal;
			}
			set
			{
				if ((this._CCiu_NombreSucursal != value))
				{
					this._CCiu_NombreSucursal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCiu_Direccion", DbType="VarChar(150)")]
		public string CCiu_Direccion
		{
			get
			{
				return this._CCiu_Direccion;
			}
			set
			{
				if ((this._CCiu_Direccion != value))
				{
					this._CCiu_Direccion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ciu_Nombre", DbType="VarChar(100)")]
		public string Ciu_Nombre
		{
			get
			{
				return this._Ciu_Nombre;
			}
			set
			{
				if ((this._Ciu_Nombre != value))
				{
					this._Ciu_Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ClienteFinal", DbType="Int NOT NULL")]
		public int Id_ClienteFinal
		{
			get
			{
				return this._Id_ClienteFinal;
			}
			set
			{
				if ((this._Id_ClienteFinal != value))
				{
					this._Id_ClienteFinal = value;
				}
			}
		}
	}
	
	public partial class sp_sucursal_por_clienteResult
	{
		
		private int _Id_ClientesCiudad;
		
		private string _Cli_Nombre;
		
		private string _CCiu_NombreSucursal;
		
		private string _CCiu_Direccion;
		
		private string _Ciu_Nombre;
		
		private int _Id_ClienteFinal;
		
		public sp_sucursal_por_clienteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ClientesCiudad", DbType="Int NOT NULL")]
		public int Id_ClientesCiudad
		{
			get
			{
				return this._Id_ClientesCiudad;
			}
			set
			{
				if ((this._Id_ClientesCiudad != value))
				{
					this._Id_ClientesCiudad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cli_Nombre", DbType="VarChar(50)")]
		public string Cli_Nombre
		{
			get
			{
				return this._Cli_Nombre;
			}
			set
			{
				if ((this._Cli_Nombre != value))
				{
					this._Cli_Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCiu_NombreSucursal", DbType="VarChar(100)")]
		public string CCiu_NombreSucursal
		{
			get
			{
				return this._CCiu_NombreSucursal;
			}
			set
			{
				if ((this._CCiu_NombreSucursal != value))
				{
					this._CCiu_NombreSucursal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCiu_Direccion", DbType="VarChar(150)")]
		public string CCiu_Direccion
		{
			get
			{
				return this._CCiu_Direccion;
			}
			set
			{
				if ((this._CCiu_Direccion != value))
				{
					this._CCiu_Direccion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ciu_Nombre", DbType="VarChar(100)")]
		public string Ciu_Nombre
		{
			get
			{
				return this._Ciu_Nombre;
			}
			set
			{
				if ((this._Ciu_Nombre != value))
				{
					this._Ciu_Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ClienteFinal", DbType="Int NOT NULL")]
		public int Id_ClienteFinal
		{
			get
			{
				return this._Id_ClienteFinal;
			}
			set
			{
				if ((this._Id_ClienteFinal != value))
				{
					this._Id_ClienteFinal = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
